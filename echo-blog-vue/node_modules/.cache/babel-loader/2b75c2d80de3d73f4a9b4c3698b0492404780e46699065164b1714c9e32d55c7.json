{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport moment from 'moment';\nexport default {\n  name: 'CrawlerIndex',\n  setup() {\n    const router = useRouter();\n    const loading = ref(false);\n    const rules = ref([]);\n    const total = ref(0);\n    const currentPage = ref(1);\n    const pageSize = ref(10);\n    const searchKeyword = ref('');\n    const status = ref('');\n    const testDialogVisible = ref(false);\n    const testLoading = ref(false);\n    const testData = ref([]);\n\n    // 模拟数据\n    const mockRules = [{\n      id: 1,\n      ruleName: '知乎热门',\n      targetUrl: 'https://www.zhihu.com/hot',\n      status: 'ENABLED',\n      createdTime: '2023-01-01 12:00:00'\n    }, {\n      id: 2,\n      ruleName: '掘金文章',\n      targetUrl: 'https://juejin.cn',\n      status: 'ENABLED',\n      createdTime: '2023-01-02 12:00:00'\n    }, {\n      id: 3,\n      ruleName: 'CSDN博客',\n      targetUrl: 'https://blog.csdn.net',\n      status: 'DISABLED',\n      createdTime: '2023-01-03 12:00:00'\n    }];\n\n    // 获取爬虫规则列表\n    const fetchRules = () => {\n      loading.value = true;\n\n      // 模拟API请求\n      setTimeout(() => {\n        rules.value = mockRules;\n        total.value = mockRules.length;\n        loading.value = false;\n      }, 500);\n    };\n\n    // 搜索\n    const handleSearch = () => {\n      currentPage.value = 1;\n      fetchRules();\n    };\n\n    // 页码变化\n    const handleCurrentChange = page => {\n      currentPage.value = page;\n      fetchRules();\n    };\n\n    // 每页条数变化\n    const handleSizeChange = size => {\n      pageSize.value = size;\n      currentPage.value = 1;\n      fetchRules();\n    };\n\n    // 编辑规则\n    const editRule = id => {\n      router.push(`/crawler/rule?id=${id}`);\n    };\n\n    // 切换状态\n    const toggleStatus = rule => {\n      const newStatus = rule.status === 'ENABLED' ? 'DISABLED' : 'ENABLED';\n\n      // 模拟API请求\n      rule.status = newStatus;\n      ElMessage.success(`规则已${newStatus === 'ENABLED' ? '启用' : '禁用'}`);\n    };\n\n    // 测试规则\n    const testRule = id => {\n      testDialogVisible.value = true;\n      testLoading.value = true;\n\n      // 模拟API请求\n      setTimeout(() => {\n        testData.value = [{\n          title: '测试标题1',\n          url: 'https://example.com/1',\n          content: '这是测试内容1，用于展示爬虫规则的测试结果。',\n          date: '2023-01-01',\n          author: '作者1'\n        }, {\n          title: '测试标题2',\n          url: 'https://example.com/2',\n          content: '这是测试内容2，用于展示爬虫规则的测试结果。',\n          date: '2023-01-02',\n          author: '作者2'\n        }];\n        testLoading.value = false;\n      }, 1000);\n    };\n\n    // 删除规则\n    const deleteRule = id => {\n      ElMessageBox.confirm('确定要删除该规则吗？', '删除确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 模拟API请求\n        rules.value = rules.value.filter(item => item.id !== id);\n        ElMessage.success('删除成功');\n      }).catch(() => {});\n    };\n\n    // 格式化日期\n    const formatDate = dateString => {\n      if (!dateString) return '';\n      return moment(dateString).format('YYYY-MM-DD HH:mm:ss');\n    };\n    onMounted(() => {\n      fetchRules();\n    });\n    return {\n      loading,\n      rules,\n      total,\n      currentPage,\n      pageSize,\n      searchKeyword,\n      status,\n      testDialogVisible,\n      testLoading,\n      testData,\n      handleSearch,\n      handleCurrentChange,\n      handleSizeChange,\n      editRule,\n      toggleStatus,\n      testRule,\n      deleteRule,\n      formatDate\n    };\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","ElMessageBox","moment","name","setup","router","loading","rules","total","currentPage","pageSize","searchKeyword","status","testDialogVisible","testLoading","testData","mockRules","id","ruleName","targetUrl","createdTime","fetchRules","value","setTimeout","length","handleSearch","handleCurrentChange","page","handleSizeChange","size","editRule","push","toggleStatus","rule","newStatus","success","testRule","title","url","content","date","author","deleteRule","confirm","confirmButtonText","cancelButtonText","type","then","filter","item","catch","formatDate","dateString","format"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/crawler/index.vue"],"sourcesContent":["<template>\n  <div class=\"crawler-container\">\n    <div class=\"page-header\">\n      <h2>爬虫管理</h2>\n      <el-button type=\"primary\" @click=\"$router.push('/crawler/rule')\">\n        <el-icon><Plus /></el-icon> 创建规则\n      </el-button>\n    </div>\n    \n    <el-card class=\"filter-card\">\n      <div class=\"filter-container\">\n        <el-input\n          v-model=\"searchKeyword\"\n          placeholder=\"搜索规则名称\"\n          clearable\n          @keyup.enter=\"handleSearch\"\n          style=\"width: 200px; margin-right: 10px;\"\n        />\n        \n        <el-select\n          v-model=\"status\"\n          placeholder=\"规则状态\"\n          clearable\n          @change=\"handleSearch\"\n          style=\"width: 120px; margin-right: 10px;\"\n        >\n          <el-option label=\"启用\" value=\"ENABLED\" />\n          <el-option label=\"禁用\" value=\"DISABLED\" />\n        </el-select>\n        \n        <el-button type=\"primary\" @click=\"handleSearch\">\n          <el-icon><Search /></el-icon> 搜索\n        </el-button>\n      </div>\n    </el-card>\n    \n    <el-table\n      v-loading=\"loading\"\n      :data=\"rules\"\n      style=\"width: 100%; margin-top: 20px;\"\n      border\n    >\n      <el-table-column prop=\"ruleName\" label=\"规则名称\" min-width=\"180\" />\n      \n      <el-table-column prop=\"targetUrl\" label=\"目标网站\" min-width=\"200\" />\n      \n      <el-table-column prop=\"status\" label=\"状态\" width=\"100\">\n        <template #default=\"scope\">\n          <el-tag :type=\"scope.row.status === 'ENABLED' ? 'success' : 'info'\">\n            {{ scope.row.status === 'ENABLED' ? '启用' : '禁用' }}\n          </el-tag>\n        </template>\n      </el-table-column>\n      \n      <el-table-column prop=\"createdTime\" label=\"创建时间\" width=\"180\">\n        <template #default=\"scope\">\n          {{ formatDate(scope.row.createdTime) }}\n        </template>\n      </el-table-column>\n      \n      <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n        <template #default=\"scope\">\n          <el-button\n            size=\"small\"\n            type=\"primary\"\n            @click=\"editRule(scope.row.id)\"\n          >\n            编辑\n          </el-button>\n          \n          <el-button\n            size=\"small\"\n            :type=\"scope.row.status === 'ENABLED' ? 'warning' : 'success'\"\n            @click=\"toggleStatus(scope.row)\"\n          >\n            {{ scope.row.status === 'ENABLED' ? '禁用' : '启用' }}\n          </el-button>\n          \n          <el-button\n            size=\"small\"\n            type=\"success\"\n            @click=\"testRule(scope.row.id)\"\n          >\n            测试\n          </el-button>\n          \n          <el-button\n            size=\"small\"\n            type=\"danger\"\n            @click=\"deleteRule(scope.row.id)\"\n          >\n            删除\n          </el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    \n    <div class=\"pagination-container\">\n      <el-pagination\n        background\n        layout=\"total, sizes, prev, pager, next, jumper\"\n        :total=\"total\"\n        :page-size=\"pageSize\"\n        :current-page=\"currentPage\"\n        :page-sizes=\"[10, 20, 50, 100]\"\n        @size-change=\"handleSizeChange\"\n        @current-change=\"handleCurrentChange\"\n      />\n    </div>\n    \n    <!-- 测试结果对话框 -->\n    <el-dialog\n      title=\"测试结果\"\n      v-model=\"testDialogVisible\"\n      width=\"800px\"\n    >\n      <div v-loading=\"testLoading\">\n        <el-table\n          v-if=\"testData.length > 0\"\n          :data=\"testData\"\n          style=\"width: 100%;\"\n          border\n        >\n          <el-table-column prop=\"title\" label=\"标题\" min-width=\"200\" />\n          <el-table-column prop=\"url\" label=\"URL\" min-width=\"200\" />\n          <el-table-column prop=\"date\" label=\"日期\" width=\"150\" />\n          <el-table-column prop=\"author\" label=\"作者\" width=\"150\" />\n          <el-table-column label=\"内容预览\" min-width=\"250\">\n            <template #default=\"scope\">\n              <div class=\"content-preview\">{{ scope.row.content }}</div>\n            </template>\n          </el-table-column>\n        </el-table>\n        <div v-else class=\"empty-data\">\n          <el-empty description=\"暂无数据\" />\n        </div>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport moment from 'moment'\n\nexport default {\n  name: 'CrawlerIndex',\n  setup() {\n    const router = useRouter()\n    const loading = ref(false)\n    const rules = ref([])\n    const total = ref(0)\n    const currentPage = ref(1)\n    const pageSize = ref(10)\n    const searchKeyword = ref('')\n    const status = ref('')\n    \n    const testDialogVisible = ref(false)\n    const testLoading = ref(false)\n    const testData = ref([])\n    \n    // 模拟数据\n    const mockRules = [\n      {\n        id: 1,\n        ruleName: '知乎热门',\n        targetUrl: 'https://www.zhihu.com/hot',\n        status: 'ENABLED',\n        createdTime: '2023-01-01 12:00:00'\n      },\n      {\n        id: 2,\n        ruleName: '掘金文章',\n        targetUrl: 'https://juejin.cn',\n        status: 'ENABLED',\n        createdTime: '2023-01-02 12:00:00'\n      },\n      {\n        id: 3,\n        ruleName: 'CSDN博客',\n        targetUrl: 'https://blog.csdn.net',\n        status: 'DISABLED',\n        createdTime: '2023-01-03 12:00:00'\n      }\n    ]\n    \n    // 获取爬虫规则列表\n    const fetchRules = () => {\n      loading.value = true\n      \n      // 模拟API请求\n      setTimeout(() => {\n        rules.value = mockRules\n        total.value = mockRules.length\n        loading.value = false\n      }, 500)\n    }\n    \n    // 搜索\n    const handleSearch = () => {\n      currentPage.value = 1\n      fetchRules()\n    }\n    \n    // 页码变化\n    const handleCurrentChange = (page) => {\n      currentPage.value = page\n      fetchRules()\n    }\n    \n    // 每页条数变化\n    const handleSizeChange = (size) => {\n      pageSize.value = size\n      currentPage.value = 1\n      fetchRules()\n    }\n    \n    // 编辑规则\n    const editRule = (id) => {\n      router.push(`/crawler/rule?id=${id}`)\n    }\n    \n    // 切换状态\n    const toggleStatus = (rule) => {\n      const newStatus = rule.status === 'ENABLED' ? 'DISABLED' : 'ENABLED'\n      \n      // 模拟API请求\n      rule.status = newStatus\n      ElMessage.success(`规则已${newStatus === 'ENABLED' ? '启用' : '禁用'}`)\n    }\n    \n    // 测试规则\n    const testRule = (id) => {\n      testDialogVisible.value = true\n      testLoading.value = true\n      \n      // 模拟API请求\n      setTimeout(() => {\n        testData.value = [\n          {\n            title: '测试标题1',\n            url: 'https://example.com/1',\n            content: '这是测试内容1，用于展示爬虫规则的测试结果。',\n            date: '2023-01-01',\n            author: '作者1'\n          },\n          {\n            title: '测试标题2',\n            url: 'https://example.com/2',\n            content: '这是测试内容2，用于展示爬虫规则的测试结果。',\n            date: '2023-01-02',\n            author: '作者2'\n          }\n        ]\n        testLoading.value = false\n      }, 1000)\n    }\n    \n    // 删除规则\n    const deleteRule = (id) => {\n      ElMessageBox.confirm('确定要删除该规则吗？', '删除确认', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        // 模拟API请求\n        rules.value = rules.value.filter(item => item.id !== id)\n        ElMessage.success('删除成功')\n      }).catch(() => {})\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      return moment(dateString).format('YYYY-MM-DD HH:mm:ss')\n    }\n    \n    onMounted(() => {\n      fetchRules()\n    })\n    \n    return {\n      loading,\n      rules,\n      total,\n      currentPage,\n      pageSize,\n      searchKeyword,\n      status,\n      testDialogVisible,\n      testLoading,\n      testData,\n      handleSearch,\n      handleCurrentChange,\n      handleSizeChange,\n      editRule,\n      toggleStatus,\n      testRule,\n      deleteRule,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.crawler-container {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.filter-card {\n  margin-bottom: 20px;\n}\n\n.filter-container {\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n}\n\n.pagination-container {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n.content-preview {\n  max-height: 100px;\n  overflow-y: auto;\n  white-space: pre-wrap;\n  word-break: break-all;\n}\n\n.empty-data {\n  padding: 30px 0;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}