{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"no-redirect\"\n};\nconst _hoisted_2 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_breadcrumb_item = _resolveComponent(\"el-breadcrumb-item\");\n  const _component_el_breadcrumb = _resolveComponent(\"el-breadcrumb\");\n  return _openBlock(), _createBlock(_component_el_breadcrumb, {\n    separator: \"/\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.breadcrumbs, (item, index) => {\n      return _openBlock(), _createBlock(_component_el_breadcrumb_item, {\n        key: index\n      }, {\n        default: _withCtx(() => [index === $setup.breadcrumbs.length - 1 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString(item.meta.title), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"a\", {\n          key: 1,\n          onClick: _withModifiers($event => $setup.handleLink(item), [\"prevent\"])\n        }, _toDisplayString(item.meta.title), 9 /* TEXT, PROPS */, _hoisted_2))]),\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["key","class","_createBlock","_component_el_breadcrumb","separator","default","_withCtx","_createElementBlock","_Fragment","_renderList","$setup","breadcrumbs","item","index","_component_el_breadcrumb_item","length","_hoisted_1","_toDisplayString","meta","title","onClick","_withModifiers","$event","handleLink","_hoisted_2","_"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/layout/components/Breadcrumb.vue"],"sourcesContent":["<template>\n  <el-breadcrumb separator=\"/\">\n    <el-breadcrumb-item v-for=\"(item, index) in breadcrumbs\" :key=\"index\">\n      <span v-if=\"index === breadcrumbs.length - 1\" class=\"no-redirect\">{{ item.meta.title }}</span>\n      <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\n    </el-breadcrumb-item>\n  </el-breadcrumb>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\n\nconst route = useRoute()\nconst router = useRouter()\nconst breadcrumbs = ref([])\n\n// 获取面包屑数据\nconst getBreadcrumbs = () => {\n  const matched = route.matched.filter(item => item.meta && item.meta.title)\n  \n  // 如果第一个不是Dashboard，则添加Dashboard作为首页\n  if (matched[0]?.path !== '/dashboard') {\n    matched.unshift({\n      path: '/dashboard',\n      meta: { title: '首页' }\n    })\n  }\n  \n  breadcrumbs.value = matched\n}\n\n// 处理链接点击\nconst handleLink = (item) => {\n  router.push(item.path)\n}\n\n// 监听路由变化\nwatch(\n  () => route.path,\n  () => getBreadcrumbs(),\n  { immediate: true }\n)\n</script>\n\n<style lang=\"scss\" scoped>\n.el-breadcrumb {\n  font-size: 14px;\n  line-height: 50px;\n  \n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n  \n  a {\n    color: #606266;\n    cursor: pointer;\n    \n    &:hover {\n      color: #409EFF;\n    }\n  }\n}\n</style> "],"mappings":";;EAAAA,GAAA;EAGoDC,KAAK,EAAC;;mBAH1D;;;;uBACEC,YAAA,CAKgBC,wBAAA;IALDC,SAAS,EAAC;EAAG;IAD9BC,OAAA,EAAAC,QAAA,CAEwB,MAAoC,E,kBAAxDC,mBAAA,CAGqBC,SAAA,QALzBC,WAAA,CAEgDC,MAAA,CAAAC,WAAW,EAF3D,CAEgCC,IAAI,EAAEC,KAAK;2BAAvCX,YAAA,CAGqBY,6BAAA;QAHqCd,GAAG,EAAEa;MAAK;QAFxER,OAAA,EAAAC,QAAA,CAGM,MAA8F,CAAlFO,KAAK,KAAKH,MAAA,CAAAC,WAAW,CAACI,MAAM,Q,cAAxCR,mBAAA,CAA8F,QAA9FS,UAA8F,EAAAC,gBAAA,CAAzBL,IAAI,CAACM,IAAI,CAACC,KAAK,qB,cACpFZ,mBAAA,CAAqE;UAJ3EP,GAAA;UAIiBoB,OAAK,EAJtBC,cAAA,CAAAC,MAAA,IAIgCZ,MAAA,CAAAa,UAAU,CAACX,IAAI;4BAAMA,IAAI,CAACM,IAAI,CAACC,KAAK,wBAJpEK,UAAA,G;QAAAC,CAAA;;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}