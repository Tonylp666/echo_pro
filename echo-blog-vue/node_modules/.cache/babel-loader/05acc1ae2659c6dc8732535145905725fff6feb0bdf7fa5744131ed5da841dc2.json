{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { getArticles } from '@/api/article';\nimport { getTasks } from '@/api/task';\n\n// 统计数据\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const stats = ref({\n      articleCount: 0,\n      categoryCount: 0,\n      taskCount: 0,\n      totalViews: 0\n    });\n\n    // 最近文章\n    const recentArticles = ref([]);\n\n    // 最近任务\n    const recentTasks = ref([]);\n\n    // 当前日期\n    const currentDate = new Date().toLocaleDateString('zh-CN', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      weekday: 'long'\n    });\n\n    // 获取最近文章\n    const fetchRecentArticles = async () => {\n      try {\n        const {\n          data\n        } = await getArticles({\n          current: 1,\n          size: 5,\n          sort: 'createdTime,desc'\n        });\n        recentArticles.value = data.records || [];\n        stats.value.articleCount = data.total || 0;\n\n        // 计算总浏览量\n        stats.value.totalViews = recentArticles.value.reduce((sum, article) => sum + (article.viewCount || 0), 0);\n      } catch (error) {\n        console.error('获取最近文章失败:', error);\n      }\n    };\n\n    // 获取最近任务\n    const fetchRecentTasks = async () => {\n      try {\n        const {\n          data\n        } = await getTasks({\n          current: 1,\n          size: 5,\n          sort: 'createdTime,desc'\n        });\n        recentTasks.value = data.records || [];\n        stats.value.taskCount = data.total || 0;\n      } catch (error) {\n        console.error('获取最近任务失败:', error);\n      }\n    };\n\n    // 获取状态类型\n    const getStatusType = status => {\n      const map = {\n        'PENDING': 'info',\n        'PROCESSING': 'warning',\n        'COMPLETED': 'success',\n        'FAILED': 'danger'\n      };\n      return map[status] || 'info';\n    };\n\n    // 模拟获取分类数量\n    const fetchCategoryCount = () => {\n      // 实际项目中应该从API获取\n      stats.value.categoryCount = 5;\n    };\n    onMounted(() => {\n      fetchRecentArticles();\n      fetchRecentTasks();\n      fetchCategoryCount();\n    });\n    const __returned__ = {\n      stats,\n      recentArticles,\n      recentTasks,\n      currentDate,\n      fetchRecentArticles,\n      fetchRecentTasks,\n      getStatusType,\n      fetchCategoryCount,\n      ref,\n      onMounted,\n      get getArticles() {\n        return getArticles;\n      },\n      get getTasks() {\n        return getTasks;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","getArticles","getTasks","stats","articleCount","categoryCount","taskCount","totalViews","recentArticles","recentTasks","currentDate","Date","toLocaleDateString","year","month","day","weekday","fetchRecentArticles","data","current","size","sort","value","records","total","reduce","sum","article","viewCount","error","console","fetchRecentTasks","getStatusType","status","map","fetchCategoryCount"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/dashboard/index.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard-container\">\n    <div class=\"dashboard-header\">\n      <h2>欢迎使用 Echo博客管理系统</h2>\n      <p>今天是 {{ currentDate }}</p>\n    </div>\n    \n    <el-row :gutter=\"20\">\n      <el-col :span=\"6\">\n        <el-card class=\"data-card\">\n          <div class=\"data-item\">\n            <div class=\"data-icon article-icon\">\n              <el-icon><Document /></el-icon>\n            </div>\n            <div class=\"data-info\">\n              <div class=\"data-title\">文章数量</div>\n              <div class=\"data-value\">{{ stats.articleCount }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"data-card\">\n          <div class=\"data-item\">\n            <div class=\"data-icon category-icon\">\n              <el-icon><Collection /></el-icon>\n            </div>\n            <div class=\"data-info\">\n              <div class=\"data-title\">分类数量</div>\n              <div class=\"data-value\">{{ stats.categoryCount }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"data-card\">\n          <div class=\"data-item\">\n            <div class=\"data-icon task-icon\">\n              <el-icon><Clock /></el-icon>\n            </div>\n            <div class=\"data-info\">\n              <div class=\"data-title\">任务数量</div>\n              <div class=\"data-value\">{{ stats.taskCount }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"6\">\n        <el-card class=\"data-card\">\n          <div class=\"data-item\">\n            <div class=\"data-icon view-icon\">\n              <el-icon><View /></el-icon>\n            </div>\n            <div class=\"data-info\">\n              <div class=\"data-title\">总浏览量</div>\n              <div class=\"data-value\">{{ stats.totalViews }}</div>\n            </div>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n    \n    <el-row :gutter=\"20\" class=\"chart-row\">\n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最近文章</span>\n              <el-button type=\"text\" @click=\"$router.push('/article')\">查看更多</el-button>\n            </div>\n          </template>\n          <el-table :data=\"recentArticles\" style=\"width: 100%\">\n            <el-table-column prop=\"title\" label=\"标题\" />\n            <el-table-column prop=\"createdTime\" label=\"创建时间\" width=\"180\" />\n            <el-table-column prop=\"viewCount\" label=\"浏览量\" width=\"100\" />\n            <el-table-column label=\"操作\" width=\"120\">\n              <template #default=\"{ row }\">\n                <el-button type=\"text\" @click=\"$router.push(`/article/edit/${row.id}`)\">查看</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n      \n      <el-col :span=\"12\">\n        <el-card class=\"chart-card\">\n          <template #header>\n            <div class=\"card-header\">\n              <span>最近任务</span>\n              <el-button type=\"text\" @click=\"$router.push('/task')\">查看更多</el-button>\n            </div>\n          </template>\n          <el-table :data=\"recentTasks\" style=\"width: 100%\">\n            <el-table-column prop=\"taskName\" label=\"任务名称\" />\n            <el-table-column prop=\"createdTime\" label=\"创建时间\" width=\"180\" />\n            <el-table-column label=\"状态\" width=\"100\">\n              <template #default=\"{ row }\">\n                <el-tag :type=\"getStatusType(row.status)\">{{ row.status }}</el-tag>\n              </template>\n            </el-table-column>\n            <el-table-column label=\"操作\" width=\"120\">\n              <template #default=\"{ row }\">\n                <el-button type=\"text\" @click=\"$router.push(`/task/edit/${row.id}`)\">查看</el-button>\n              </template>\n            </el-table-column>\n          </el-table>\n        </el-card>\n      </el-col>\n    </el-row>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { getArticles } from '@/api/article'\nimport { getTasks } from '@/api/task'\n\n// 统计数据\nconst stats = ref({\n  articleCount: 0,\n  categoryCount: 0,\n  taskCount: 0,\n  totalViews: 0\n})\n\n// 最近文章\nconst recentArticles = ref([])\n\n// 最近任务\nconst recentTasks = ref([])\n\n// 当前日期\nconst currentDate = new Date().toLocaleDateString('zh-CN', {\n  year: 'numeric',\n  month: 'long',\n  day: 'numeric',\n  weekday: 'long'\n})\n\n// 获取最近文章\nconst fetchRecentArticles = async () => {\n  try {\n    const { data } = await getArticles({\n      current: 1,\n      size: 5,\n      sort: 'createdTime,desc'\n    })\n    recentArticles.value = data.records || []\n    stats.value.articleCount = data.total || 0\n    \n    // 计算总浏览量\n    stats.value.totalViews = recentArticles.value.reduce((sum, article) => sum + (article.viewCount || 0), 0)\n  } catch (error) {\n    console.error('获取最近文章失败:', error)\n  }\n}\n\n// 获取最近任务\nconst fetchRecentTasks = async () => {\n  try {\n    const { data } = await getTasks({\n      current: 1,\n      size: 5,\n      sort: 'createdTime,desc'\n    })\n    recentTasks.value = data.records || []\n    stats.value.taskCount = data.total || 0\n  } catch (error) {\n    console.error('获取最近任务失败:', error)\n  }\n}\n\n// 获取状态类型\nconst getStatusType = (status) => {\n  const map = {\n    'PENDING': 'info',\n    'PROCESSING': 'warning',\n    'COMPLETED': 'success',\n    'FAILED': 'danger'\n  }\n  return map[status] || 'info'\n}\n\n// 模拟获取分类数量\nconst fetchCategoryCount = () => {\n  // 实际项目中应该从API获取\n  stats.value.categoryCount = 5\n}\n\nonMounted(() => {\n  fetchRecentArticles()\n  fetchRecentTasks()\n  fetchCategoryCount()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.dashboard-container {\n  .dashboard-header {\n    margin-bottom: 20px;\n    \n    h2 {\n      margin: 0;\n      font-size: 24px;\n      color: #303133;\n    }\n    \n    p {\n      margin: 10px 0 0;\n      color: #909399;\n    }\n  }\n  \n  .data-card {\n    margin-bottom: 20px;\n    \n    .data-item {\n      display: flex;\n      align-items: center;\n      \n      .data-icon {\n        width: 60px;\n        height: 60px;\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        margin-right: 15px;\n        \n        .el-icon {\n          font-size: 30px;\n          color: #fff;\n        }\n        \n        &.article-icon {\n          background-color: #409EFF;\n        }\n        \n        &.category-icon {\n          background-color: #67C23A;\n        }\n        \n        &.task-icon {\n          background-color: #E6A23C;\n        }\n        \n        &.view-icon {\n          background-color: #F56C6C;\n        }\n      }\n      \n      .data-info {\n        .data-title {\n          font-size: 14px;\n          color: #909399;\n        }\n        \n        .data-value {\n          font-size: 24px;\n          font-weight: bold;\n          color: #303133;\n        }\n      }\n    }\n  }\n  \n  .chart-row {\n    margin-top: 20px;\n  }\n  \n  .chart-card {\n    margin-bottom: 20px;\n    \n    .card-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n  }\n}\n</style> "],"mappings":"AAoHA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAI;AACnC,SAASC,WAAW,QAAQ,eAAc;AAC1C,SAASC,QAAQ,QAAQ,YAAW;;AAEpC;;;;;;;;IACA,MAAMC,KAAK,GAAGJ,GAAG,CAAC;MAChBK,YAAY,EAAE,CAAC;MACfC,aAAa,EAAE,CAAC;MAChBC,SAAS,EAAE,CAAC;MACZC,UAAU,EAAE;IACd,CAAC;;IAED;IACA,MAAMC,cAAc,GAAGT,GAAG,CAAC,EAAE;;IAE7B;IACA,MAAMU,WAAW,GAAGV,GAAG,CAAC,EAAE;;IAE1B;IACA,MAAMW,WAAW,GAAG,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;MACzDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,OAAO,EAAE;IACX,CAAC;;IAED;IACA,MAAMC,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMjB,WAAW,CAAC;UACjCkB,OAAO,EAAE,CAAC;UACVC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE;QACR,CAAC;QACDb,cAAc,CAACc,KAAK,GAAGJ,IAAI,CAACK,OAAO,IAAI,EAAC;QACxCpB,KAAK,CAACmB,KAAK,CAAClB,YAAY,GAAGc,IAAI,CAACM,KAAK,IAAI;;QAEzC;QACArB,KAAK,CAACmB,KAAK,CAACf,UAAU,GAAGC,cAAc,CAACc,KAAK,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAKD,GAAG,IAAIC,OAAO,CAACC,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC;MAC1G,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC;IACF;;IAEA;IACA,MAAME,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAM;UAAEb;QAAK,CAAC,GAAG,MAAMhB,QAAQ,CAAC;UAC9BiB,OAAO,EAAE,CAAC;UACVC,IAAI,EAAE,CAAC;UACPC,IAAI,EAAE;QACR,CAAC;QACDZ,WAAW,CAACa,KAAK,GAAGJ,IAAI,CAACK,OAAO,IAAI,EAAC;QACrCpB,KAAK,CAACmB,KAAK,CAAChB,SAAS,GAAGY,IAAI,CAACM,KAAK,IAAI;MACxC,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK;MAClC;IACF;;IAEA;IACA,MAAMG,aAAa,GAAIC,MAAM,IAAK;MAChC,MAAMC,GAAG,GAAG;QACV,SAAS,EAAE,MAAM;QACjB,YAAY,EAAE,SAAS;QACvB,WAAW,EAAE,SAAS;QACtB,QAAQ,EAAE;MACZ;MACA,OAAOA,GAAG,CAACD,MAAM,CAAC,IAAI,MAAK;IAC7B;;IAEA;IACA,MAAME,kBAAkB,GAAGA,CAAA,KAAM;MAC/B;MACAhC,KAAK,CAACmB,KAAK,CAACjB,aAAa,GAAG;IAC9B;IAEAL,SAAS,CAAC,MAAM;MACdiB,mBAAmB,CAAC;MACpBc,gBAAgB,CAAC;MACjBI,kBAAkB,CAAC;IACrB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}