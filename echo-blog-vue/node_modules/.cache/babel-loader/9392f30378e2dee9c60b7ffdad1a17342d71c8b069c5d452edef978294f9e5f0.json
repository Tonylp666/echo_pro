{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { useUserStore } from '@/store/user';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const userStore = useUserStore();\n\n    // 登录表单\n    const loginFormRef = ref(null);\n    const loginForm = reactive({\n      username: '',\n      password: ''\n    });\n\n    // 表单验证规则\n    const loginRules = {\n      username: [{\n        required: true,\n        message: '请输入用户名',\n        trigger: 'blur'\n      }, {\n        min: 3,\n        max: 20,\n        message: '长度在 3 到 20 个字符',\n        trigger: 'blur'\n      }],\n      password: [{\n        required: true,\n        message: '请输入密码',\n        trigger: 'blur'\n      }, {\n        min: 6,\n        max: 20,\n        message: '长度在 6 到 20 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 密码可见性\n    const passwordVisible = ref(false);\n\n    // 加载状态\n    const loading = ref(false);\n\n    // 处理登录\n    const handleLogin = () => {\n      loginFormRef.value.validate(async valid => {\n        if (valid) {\n          loading.value = true;\n          try {\n            await userStore.login(loginForm);\n            await userStore.getUserInfo();\n            ElMessage.success('登录成功');\n            router.push('/');\n          } catch (error) {\n            ElMessage.error(error.message || '登录失败，请重试');\n          } finally {\n            loading.value = false;\n          }\n        } else {\n          return false;\n        }\n      });\n    };\n    const __returned__ = {\n      router,\n      userStore,\n      loginFormRef,\n      loginForm,\n      loginRules,\n      passwordVisible,\n      loading,\n      handleLogin,\n      ref,\n      reactive,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get useUserStore() {\n        return useUserStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","useUserStore","router","userStore","loginFormRef","loginForm","username","password","loginRules","required","message","trigger","min","max","passwordVisible","loading","handleLogin","value","validate","valid","login","getUserInfo","success","push","error"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/login/index.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-form-container\">\n      <div class=\"title-container\">\n        <h3 class=\"title\">Echo博客管理系统</h3>\n      </div>\n      \n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            type=\"text\"\n            prefix-icon=\"User\"\n            autocomplete=\"off\"\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            placeholder=\"密码\"\n            :type=\"passwordVisible ? 'text' : 'password'\"\n            prefix-icon=\"Lock\"\n            autocomplete=\"off\"\n          >\n            <template #suffix>\n              <el-icon class=\"password-icon\" @click=\"passwordVisible = !passwordVisible\">\n                <View v-if=\"passwordVisible\" />\n                <Hide v-else />\n              </el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button :loading=\"loading\" type=\"primary\" class=\"login-button\" @click=\"handleLogin\">\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n        \n        <div class=\"tips\">\n          <span>用户名: admin</span>\n          <span>密码: 123456</span>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useUserStore } from '@/store/user'\n\nconst router = useRouter()\nconst userStore = useUserStore()\n\n// 登录表单\nconst loginFormRef = ref(null)\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 表单验证规则\nconst loginRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n  ]\n}\n\n// 密码可见性\nconst passwordVisible = ref(false)\n\n// 加载状态\nconst loading = ref(false)\n\n// 处理登录\nconst handleLogin = () => {\n  loginFormRef.value.validate(async (valid) => {\n    if (valid) {\n      loading.value = true\n      try {\n        await userStore.login(loginForm)\n        await userStore.getUserInfo()\n        ElMessage.success('登录成功')\n        router.push('/')\n      } catch (error) {\n        ElMessage.error(error.message || '登录失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    } else {\n      return false\n    }\n  })\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #2d3a4b;\n  \n  .login-form-container {\n    width: 350px;\n    padding: 30px 35px;\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    \n    .title-container {\n      text-align: center;\n      margin-bottom: 30px;\n      \n      .title {\n        font-size: 26px;\n        color: #303133;\n        margin: 0;\n      }\n    }\n    \n    .login-form {\n      .password-icon {\n        cursor: pointer;\n      }\n      \n      .login-button {\n        width: 100%;\n      }\n      \n      .tips {\n        margin-top: 15px;\n        display: flex;\n        justify-content: space-between;\n        color: #909399;\n        font-size: 13px;\n      }\n    }\n  }\n}\n</style> "],"mappings":"AAmDA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,SAAS,QAAQ,YAAW;AACrC,SAASC,SAAS,QAAQ,cAAa;AACvC,SAASC,YAAY,QAAQ,cAAa;;;;;;;IAE1C,MAAMC,MAAM,GAAGH,SAAS,CAAC;IACzB,MAAMI,SAAS,GAAGF,YAAY,CAAC;;IAE/B;IACA,MAAMG,YAAY,GAAGP,GAAG,CAAC,IAAI;IAC7B,MAAMQ,SAAS,GAAGP,QAAQ,CAAC;MACzBQ,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,MAAMC,UAAU,GAAG;MACjBF,QAAQ,EAAE,CACR;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAO,CAAC,EACtD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,EAC/D;MACDJ,QAAQ,EAAE,CACR;QAAEE,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAO,CAAC,EACrD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO;IAElE;;IAEA;IACA,MAAMG,eAAe,GAAGjB,GAAG,CAAC,KAAK;;IAEjC;IACA,MAAMkB,OAAO,GAAGlB,GAAG,CAAC,KAAK;;IAEzB;IACA,MAAMmB,WAAW,GAAGA,CAAA,KAAM;MACxBZ,YAAY,CAACa,KAAK,CAACC,QAAQ,CAAC,MAAOC,KAAK,IAAK;QAC3C,IAAIA,KAAK,EAAE;UACTJ,OAAO,CAACE,KAAK,GAAG,IAAG;UACnB,IAAI;YACF,MAAMd,SAAS,CAACiB,KAAK,CAACf,SAAS;YAC/B,MAAMF,SAAS,CAACkB,WAAW,CAAC;YAC5BrB,SAAS,CAACsB,OAAO,CAAC,MAAM;YACxBpB,MAAM,CAACqB,IAAI,CAAC,GAAG;UACjB,CAAC,CAAC,OAAOC,KAAK,EAAE;YACdxB,SAAS,CAACwB,KAAK,CAACA,KAAK,CAACd,OAAO,IAAI,UAAU;UAC7C,CAAC,SAAS;YACRK,OAAO,CAACE,KAAK,GAAG,KAAI;UACtB;QACF,CAAC,MAAM;UACL,OAAO,KAAI;QACb;MACF,CAAC;IACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}