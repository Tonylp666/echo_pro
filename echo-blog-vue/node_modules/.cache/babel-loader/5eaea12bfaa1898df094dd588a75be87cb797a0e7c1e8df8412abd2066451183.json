{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, resolveDirective as _resolveDirective, withDirectives as _withDirectives, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-container app-container\"\n};\nconst _hoisted_2 = {\n  class: \"card-header\"\n};\nconst _hoisted_3 = {\n  class: \"pagination-container\"\n};\nconst _hoisted_4 = {\n  class: \"error-message\"\n};\nconst _hoisted_5 = {\n  class: \"dialog-footer\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Plus = _resolveComponent(\"Plus\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_tag = _resolveComponent(\"el-tag\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n  const _component_el_card = _resolveComponent(\"el-card\");\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\");\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\");\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_card, {\n    class: \"box-card\"\n  }, {\n    header: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"span\", null, \"任务管理\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $setup.handleCreateTask\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_icon, null, {\n        default: _withCtx(() => [_createVNode(_component_Plus)]),\n        _: 1 /* STABLE */\n      }), _cache[5] || (_cache[5] = _createTextVNode(\" 创建任务 \"))]),\n      _: 1 /* STABLE */\n    })])]),\n    default: _withCtx(() => [_withDirectives((_openBlock(), _createBlock(_component_el_table, {\n      data: $setup.taskList,\n      style: {\n        \"width\": \"100%\"\n      },\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_table_column, {\n        prop: \"id\",\n        label: \"ID\",\n        width: \"80\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"taskName\",\n        label: \"任务名称\",\n        \"min-width\": \"150\",\n        \"show-overflow-tooltip\": \"\"\n      }), _createVNode(_component_el_table_column, {\n        prop: \"title\",\n        label: \"文章标题\",\n        \"min-width\": \"150\",\n        \"show-overflow-tooltip\": \"\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"分类\",\n        width: \"120\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getCategoryName(row.articleCategoryId)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"调度类型\",\n        width: \"120\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          type: $setup.getScheduleTypeTag(row.scheduleType),\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getScheduleTypeText(row.scheduleType)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        label: \"状态\",\n        width: \"100\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_tag, {\n          type: $setup.getStatusTag(row.status),\n          size: \"small\"\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getStatusText(row.status)), 1 /* TEXT */)]),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_table_column, {\n        prop: \"createdTime\",\n        label: \"创建时间\",\n        width: \"180\"\n      }), _createVNode(_component_el_table_column, {\n        label: \"操作\",\n        width: \"250\",\n        fixed: \"right\"\n      }, {\n        default: _withCtx(({\n          row\n        }) => [_createVNode(_component_el_button, {\n          type: \"primary\",\n          size: \"small\",\n          onClick: $event => $setup.handleEditTask(row.id)\n        }, {\n          default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\" 编辑 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), _createVNode(_component_el_button, {\n          type: \"info\",\n          size: \"small\",\n          onClick: $event => $setup.handleViewTaskDetail(row.id)\n        }, {\n          default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\" 详情 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"]), row.status === 'FAILED' ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 0,\n          type: \"warning\",\n          size: \"small\",\n          onClick: $event => $setup.handleRetryTask(row.id)\n        }, {\n          default: _withCtx(() => _cache[9] || (_cache[9] = [_createTextVNode(\" 重试 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), row.resultArticleId ? (_openBlock(), _createBlock(_component_el_button, {\n          key: 1,\n          type: \"success\",\n          size: \"small\",\n          onClick: $event => $setup.viewArticle(row.resultArticleId)\n        }, {\n          default: _withCtx(() => _cache[10] || (_cache[10] = [_createTextVNode(\" 查看文章 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_button, {\n          type: \"danger\",\n          size: \"small\",\n          onClick: $event => $setup.handleDeleteTask(row.id)\n        }, {\n          default: _withCtx(() => _cache[11] || (_cache[11] = [_createTextVNode(\" 删除 \")])),\n          _: 2 /* DYNAMIC */\n        }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]]), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_pagination, {\n      \"current-page\": $setup.queryParams.current,\n      \"onUpdate:currentPage\": _cache[0] || (_cache[0] = $event => $setup.queryParams.current = $event),\n      \"page-size\": $setup.queryParams.size,\n      \"onUpdate:pageSize\": _cache[1] || (_cache[1] = $event => $setup.queryParams.size = $event),\n      \"page-sizes\": [10, 20, 50, 100],\n      layout: \"total, sizes, prev, pager, next, jumper\",\n      total: $setup.total,\n      onSizeChange: $setup.handleSizeChange,\n      onCurrentChange: $setup.handleCurrentChange\n    }, null, 8 /* PROPS */, [\"current-page\", \"page-size\", \"total\"])])]),\n    _: 1 /* STABLE */\n  }), _createCommentVNode(\" 任务详情对话框 \"), _createVNode(_component_el_dialog, {\n    modelValue: $setup.detailDialogVisible,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.detailDialogVisible = $event),\n    title: \"任务详情\",\n    width: \"60%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_5, [_createVNode(_component_el_button, {\n      onClick: _cache[2] || (_cache[2] = $event => $setup.detailDialogVisible = false)\n    }, {\n      default: _withCtx(() => _cache[12] || (_cache[12] = [_createTextVNode(\"关闭\")])),\n      _: 1 /* STABLE */\n    }), $setup.currentTask.resultArticleId ? (_openBlock(), _createBlock(_component_el_button, {\n      key: 0,\n      type: \"primary\",\n      onClick: _cache[3] || (_cache[3] = $event => $setup.viewArticle($setup.currentTask.resultArticleId))\n    }, {\n      default: _withCtx(() => _cache[13] || (_cache[13] = [_createTextVNode(\" 查看文章 \")])),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)])]),\n    default: _withCtx(() => [_createVNode(_component_el_descriptions, {\n      column: 1,\n      border: \"\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_descriptions_item, {\n        label: \"任务名称\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.taskName), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"文章标题\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.title), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"分类\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getCategoryName($setup.currentTask.articleCategoryId)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"调度类型\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getScheduleTypeText($setup.currentTask.scheduleType)), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), $setup.currentTask.scheduleType === 'CRON' ? (_openBlock(), _createBlock(_component_el_descriptions_item, {\n        key: 0,\n        label: \"CRON表达式\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.scheduleCron), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), _createVNode(_component_el_descriptions_item, {\n        label: \"状态\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_tag, {\n          type: $setup.getStatusTag($setup.currentTask.status)\n        }, {\n          default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.getStatusText($setup.currentTask.status)), 1 /* TEXT */)]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"type\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"任务描述\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.description || '无'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"提示词\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.prompt), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_descriptions_item, {\n        label: \"源数据\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"pre\", null, _toDisplayString($setup.currentTask.sourceData || '无'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }), $setup.currentTask.errorMessage ? (_openBlock(), _createBlock(_component_el_descriptions_item, {\n        key: 1,\n        label: \"错误信息\"\n      }, {\n        default: _withCtx(() => [_createElementVNode(\"pre\", _hoisted_4, _toDisplayString($setup.currentTask.errorMessage), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.currentTask.lastExecuteTime ? (_openBlock(), _createBlock(_component_el_descriptions_item, {\n        key: 2,\n        label: \"最后执行时间\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.lastExecuteTime), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true), $setup.currentTask.nextExecuteTime ? (_openBlock(), _createBlock(_component_el_descriptions_item, {\n        key: 3,\n        label: \"下次执行时间\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.currentTask.nextExecuteTime), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      })) : _createCommentVNode(\"v-if\", true)]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createVNode","_component_el_card","header","_withCtx","_createElementVNode","_hoisted_2","_component_el_button","type","onClick","$setup","handleCreateTask","default","_component_el_icon","_component_Plus","_","_createTextVNode","_createBlock","_component_el_table","data","taskList","style","border","_component_el_table_column","prop","label","width","row","_component_el_tag","size","_toDisplayString","getCategoryName","articleCategoryId","getScheduleTypeTag","scheduleType","getScheduleTypeText","getStatusTag","status","getStatusText","fixed","$event","handleEditTask","id","_cache","handleViewTaskDetail","key","handleRetryTask","_createCommentVNode","resultArticleId","viewArticle","handleDeleteTask","loading","_hoisted_3","_component_el_pagination","queryParams","current","layout","total","onSizeChange","handleSizeChange","onCurrentChange","handleCurrentChange","_component_el_dialog","modelValue","detailDialogVisible","title","footer","_hoisted_5","currentTask","_component_el_descriptions","column","_component_el_descriptions_item","taskName","scheduleCron","description","prompt","sourceData","errorMessage","_hoisted_4","lastExecuteTime","nextExecuteTime"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/task/index.vue"],"sourcesContent":["<template>\n  <div class=\"task-container app-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>任务管理</span>\n          <el-button type=\"primary\" @click=\"handleCreateTask\">\n            <el-icon><Plus /></el-icon>\n            创建任务\n          </el-button>\n        </div>\n      </template>\n      \n      <el-table\n        v-loading=\"loading\"\n        :data=\"taskList\"\n        style=\"width: 100%\"\n        border\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"taskName\" label=\"任务名称\" min-width=\"150\" show-overflow-tooltip />\n        <el-table-column prop=\"title\" label=\"文章标题\" min-width=\"150\" show-overflow-tooltip />\n        <el-table-column label=\"分类\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag size=\"small\">{{ getCategoryName(row.articleCategoryId) }}</el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"调度类型\" width=\"120\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getScheduleTypeTag(row.scheduleType)\" size=\"small\">\n              {{ getScheduleTypeText(row.scheduleType) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column label=\"状态\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"getStatusTag(row.status)\" size=\"small\">\n              {{ getStatusText(row.status) }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdTime\" label=\"创建时间\" width=\"180\" />\n        <el-table-column label=\"操作\" width=\"250\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              type=\"primary\"\n              size=\"small\"\n              @click=\"handleEditTask(row.id)\"\n            >\n              编辑\n            </el-button>\n            <el-button\n              type=\"info\"\n              size=\"small\"\n              @click=\"handleViewTaskDetail(row.id)\"\n            >\n              详情\n            </el-button>\n            <el-button\n              v-if=\"row.status === 'FAILED'\"\n              type=\"warning\"\n              size=\"small\"\n              @click=\"handleRetryTask(row.id)\"\n            >\n              重试\n            </el-button>\n            <el-button\n              v-if=\"row.resultArticleId\"\n              type=\"success\"\n              size=\"small\"\n              @click=\"viewArticle(row.resultArticleId)\"\n            >\n              查看文章\n            </el-button>\n            <el-button\n              type=\"danger\"\n              size=\"small\"\n              @click=\"handleDeleteTask(row.id)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"queryParams.current\"\n          v-model:page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 任务详情对话框 -->\n    <el-dialog\n      v-model=\"detailDialogVisible\"\n      title=\"任务详情\"\n      width=\"60%\"\n    >\n      <el-descriptions :column=\"1\" border>\n        <el-descriptions-item label=\"任务名称\">{{ currentTask.taskName }}</el-descriptions-item>\n        <el-descriptions-item label=\"文章标题\">{{ currentTask.title }}</el-descriptions-item>\n        <el-descriptions-item label=\"分类\">{{ getCategoryName(currentTask.articleCategoryId) }}</el-descriptions-item>\n        <el-descriptions-item label=\"调度类型\">{{ getScheduleTypeText(currentTask.scheduleType) }}</el-descriptions-item>\n        <el-descriptions-item v-if=\"currentTask.scheduleType === 'CRON'\" label=\"CRON表达式\">\n          {{ currentTask.scheduleCron }}\n        </el-descriptions-item>\n        <el-descriptions-item label=\"状态\">\n          <el-tag :type=\"getStatusTag(currentTask.status)\">\n            {{ getStatusText(currentTask.status) }}\n          </el-tag>\n        </el-descriptions-item>\n        <el-descriptions-item label=\"任务描述\">{{ currentTask.description || '无' }}</el-descriptions-item>\n        <el-descriptions-item label=\"提示词\">{{ currentTask.prompt }}</el-descriptions-item>\n        <el-descriptions-item label=\"源数据\">\n          <pre>{{ currentTask.sourceData || '无' }}</pre>\n        </el-descriptions-item>\n        <el-descriptions-item v-if=\"currentTask.errorMessage\" label=\"错误信息\">\n          <pre class=\"error-message\">{{ currentTask.errorMessage }}</pre>\n        </el-descriptions-item>\n        <el-descriptions-item v-if=\"currentTask.lastExecuteTime\" label=\"最后执行时间\">\n          {{ currentTask.lastExecuteTime }}\n        </el-descriptions-item>\n        <el-descriptions-item v-if=\"currentTask.nextExecuteTime\" label=\"下次执行时间\">\n          {{ currentTask.nextExecuteTime }}\n        </el-descriptions-item>\n      </el-descriptions>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"detailDialogVisible = false\">关闭</el-button>\n          <el-button\n            v-if=\"currentTask.resultArticleId\"\n            type=\"primary\"\n            @click=\"viewArticle(currentTask.resultArticleId)\"\n          >\n            查看文章\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getTasks, getTask, deleteTask, updateTaskStatus } from '@/api/task'\nimport { getCategories } from '@/api/category'\n\nconst router = useRouter()\n\n// 任务列表\nconst taskList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 分类列表\nconst categoryList = ref([])\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10\n})\n\n// 当前任务\nconst currentTask = ref({})\nconst detailDialogVisible = ref(false)\n\n// 获取任务列表\nconst getTaskList = async () => {\n  loading.value = true\n  try {\n    const { data } = await getTasks({\n      current: queryParams.current,\n      size: queryParams.size\n    })\n    taskList.value = data.records\n    total.value = data.total\n  } catch (error) {\n    console.error('获取任务列表失败:', error)\n    ElMessage.error('获取任务列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 获取分类列表\nconst getCategoryList = async () => {\n  try {\n    const { data } = await getCategories()\n    categoryList.value = data\n  } catch (error) {\n    console.error('获取分类列表失败:', error)\n  }\n}\n\n// 获取分类名称\nconst getCategoryName = (categoryId) => {\n  const category = categoryList.value.find(item => item.id === categoryId)\n  return category ? category.name : '未分类'\n}\n\n// 获取调度类型标签\nconst getScheduleTypeTag = (type) => {\n  const map = {\n    'ONCE': 'info',\n    'CRON': 'warning'\n  }\n  return map[type] || 'info'\n}\n\n// 获取调度类型文本\nconst getScheduleTypeText = (type) => {\n  const map = {\n    'ONCE': '一次性',\n    'CRON': '定时'\n  }\n  return map[type] || '未知'\n}\n\n// 获取状态标签\nconst getStatusTag = (status) => {\n  const map = {\n    'PENDING': 'info',\n    'PROCESSING': 'warning',\n    'COMPLETED': 'success',\n    'FAILED': 'danger'\n  }\n  return map[status] || 'info'\n}\n\n// 获取状态文本\nconst getStatusText = (status) => {\n  const map = {\n    'PENDING': '待处理',\n    'PROCESSING': '处理中',\n    'COMPLETED': '已完成',\n    'FAILED': '失败'\n  }\n  return map[status] || '未知'\n}\n\n// 创建任务\nconst handleCreateTask = () => {\n  router.push('/task/create')\n}\n\n// 编辑任务\nconst handleEditTask = (id) => {\n  router.push(`/task/edit/${id}`)\n}\n\n// 查看任务详情\nconst handleViewTaskDetail = async (id) => {\n  try {\n    const { data } = await getTask(id)\n    currentTask.value = data\n    detailDialogVisible.value = true\n  } catch (error) {\n    console.error('获取任务详情失败:', error)\n    ElMessage.error('获取任务详情失败')\n  }\n}\n\n// 重试任务\nconst handleRetryTask = async (id) => {\n  try {\n    await updateTaskStatus(id, 'PENDING')\n    ElMessage.success('任务已重新提交')\n    getTaskList()\n  } catch (error) {\n    console.error('重试任务失败:', error)\n    ElMessage.error('重试任务失败')\n  }\n}\n\n// 查看文章\nconst viewArticle = (id) => {\n  router.push(`/article/edit/${id}`)\n}\n\n// 删除任务\nconst handleDeleteTask = (id) => {\n  ElMessageBox.confirm('确定要删除该任务吗？删除后不可恢复！', '警告', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await deleteTask(id)\n      ElMessage.success('删除成功')\n      getTaskList()\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }).catch(() => {})\n}\n\n// 分页处理\nconst handleSizeChange = (size) => {\n  queryParams.size = size\n  getTaskList()\n}\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current\n  getTaskList()\n}\n\nonMounted(() => {\n  getTaskList()\n  getCategoryList()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.task-container {\n  .error-message {\n    color: #f56c6c;\n    margin: 0;\n    white-space: pre-wrap;\n    word-break: break-all;\n  }\n  \n  pre {\n    margin: 0;\n    white-space: pre-wrap;\n    word-break: break-all;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}