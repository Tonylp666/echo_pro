{"ast":null,"code":"import { ref, reactive, computed, onMounted, watch } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { marked } from 'marked';\nimport { getArticle, createArticle, updateArticle } from '@/api/article';\nimport { getCategories } from '@/api/category';\nimport { getPlatformConfigs, publishArticle } from '@/api/platform';\nexport default {\n  __name: 'edit',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n\n    // 是否为编辑模式\n    const isEdit = computed(() => !!route.params.id);\n\n    // 表单引用\n    const articleFormRef = ref(null);\n    const submitLoading = ref(false);\n\n    // 文章表单\n    const articleForm = reactive({\n      id: null,\n      title: '',\n      articleCategoryId: null,\n      summary: '',\n      content: '',\n      contentHtml: '',\n      contentMarkdown: '',\n      coverImage: '',\n      status: 'DRAFT'\n    });\n\n    // 表单验证规则\n    const articleRules = {\n      title: [{\n        required: true,\n        message: '请输入文章标题',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 100,\n        message: '长度在 2 到 100 个字符',\n        trigger: 'blur'\n      }],\n      articleCategoryId: [{\n        required: true,\n        message: '请选择文章分类',\n        trigger: 'change'\n      }],\n      contentMarkdown: [{\n        required: true,\n        message: '请输入文章内容',\n        trigger: 'blur'\n      }]\n    };\n\n    // 分类列表\n    const categoryList = ref([]);\n\n    // 编辑器相关\n    const activeTab = ref('edit');\n    const renderedContent = computed(() => {\n      return marked(articleForm.contentMarkdown || '');\n    });\n\n    // 平台发布相关\n    const publishDialogVisible = ref(false);\n    const publishLoading = ref(false);\n    const platformList = ref([]);\n    const selectedPlatforms = ref([]);\n\n    // 监听Markdown内容变化，自动生成HTML内容\n    watch(() => articleForm.contentMarkdown, val => {\n      if (val) {\n        articleForm.contentHtml = marked(val);\n        articleForm.content = val;\n      }\n    });\n\n    // 获取文章详情\n    const getArticleDetail = async id => {\n      try {\n        const {\n          data\n        } = await getArticle(id);\n        Object.assign(articleForm, data);\n      } catch (error) {\n        console.error('获取文章详情失败:', error);\n        ElMessage.error('获取文章详情失败');\n      }\n    };\n\n    // 获取分类列表\n    const getCategoryList = async () => {\n      try {\n        const {\n          data\n        } = await getCategories();\n        categoryList.value = data;\n      } catch (error) {\n        console.error('获取分类列表失败:', error);\n      }\n    };\n\n    // 获取平台列表\n    const getPlatformList = async () => {\n      try {\n        const {\n          data\n        } = await getPlatformConfigs();\n        platformList.value = data;\n      } catch (error) {\n        console.error('获取平台列表失败:', error);\n      }\n    };\n\n    // 封面上传成功\n    const handleCoverSuccess = res => {\n      articleForm.coverImage = res.data.url;\n      ElMessage.success('上传成功');\n    };\n\n    // 封面上传前校验\n    const beforeCoverUpload = file => {\n      const isImage = file.type.startsWith('image/');\n      const isLt2M = file.size / 1024 / 1024 < 2;\n      if (!isImage) {\n        ElMessage.error('只能上传图片文件!');\n      }\n      if (!isLt2M) {\n        ElMessage.error('图片大小不能超过 2MB!');\n      }\n      return isImage && isLt2M;\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      articleFormRef.value.validate(async valid => {\n        if (valid) {\n          submitLoading.value = true;\n          try {\n            if (isEdit.value) {\n              await updateArticle(articleForm.id, articleForm);\n              ElMessage.success('更新成功');\n            } else {\n              const {\n                data\n              } = await createArticle(articleForm);\n              articleForm.id = data.id;\n              ElMessage.success('创建成功');\n            }\n            if (articleForm.status === 'PUBLISHED') {\n              publishDialogVisible.value = true;\n            } else {\n              goBack();\n            }\n          } catch (error) {\n            console.error('保存文章失败:', error);\n            ElMessage.error('保存文章失败');\n          } finally {\n            submitLoading.value = false;\n          }\n        } else {\n          return false;\n        }\n      });\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      if (isEdit.value) {\n        getArticleDetail(route.params.id);\n      } else {\n        articleFormRef.value.resetFields();\n      }\n    };\n\n    // 发布到平台\n    const handlePublishToPlatforms = async () => {\n      if (selectedPlatforms.value.length === 0) {\n        ElMessage.warning('请选择至少一个平台');\n        return;\n      }\n      publishLoading.value = true;\n      try {\n        for (const platformId of selectedPlatforms.value) {\n          await publishArticle(articleForm.id, platformId);\n        }\n        ElMessage.success('发布成功');\n        publishDialogVisible.value = false;\n        goBack();\n      } catch (error) {\n        console.error('发布到平台失败:', error);\n        ElMessage.error('发布到平台失败');\n      } finally {\n        publishLoading.value = false;\n      }\n    };\n\n    // 返回列表页\n    const goBack = () => {\n      router.push('/article');\n    };\n    onMounted(() => {\n      getCategoryList();\n      getPlatformList();\n      if (isEdit.value) {\n        getArticleDetail(route.params.id);\n      }\n    });\n    const __returned__ = {\n      route,\n      router,\n      isEdit,\n      articleFormRef,\n      submitLoading,\n      articleForm,\n      articleRules,\n      categoryList,\n      activeTab,\n      renderedContent,\n      publishDialogVisible,\n      publishLoading,\n      platformList,\n      selectedPlatforms,\n      getArticleDetail,\n      getCategoryList,\n      getPlatformList,\n      handleCoverSuccess,\n      beforeCoverUpload,\n      submitForm,\n      resetForm,\n      handlePublishToPlatforms,\n      goBack,\n      ref,\n      reactive,\n      computed,\n      onMounted,\n      watch,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get marked() {\n        return marked;\n      },\n      get getArticle() {\n        return getArticle;\n      },\n      get createArticle() {\n        return createArticle;\n      },\n      get updateArticle() {\n        return updateArticle;\n      },\n      get getCategories() {\n        return getCategories;\n      },\n      get getPlatformConfigs() {\n        return getPlatformConfigs;\n      },\n      get publishArticle() {\n        return publishArticle;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","watch","useRoute","useRouter","ElMessage","marked","getArticle","createArticle","updateArticle","getCategories","getPlatformConfigs","publishArticle","route","router","isEdit","params","id","articleFormRef","submitLoading","articleForm","title","articleCategoryId","summary","content","contentHtml","contentMarkdown","coverImage","status","articleRules","required","message","trigger","min","max","categoryList","activeTab","renderedContent","publishDialogVisible","publishLoading","platformList","selectedPlatforms","val","getArticleDetail","data","Object","assign","error","console","getCategoryList","value","getPlatformList","handleCoverSuccess","res","url","success","beforeCoverUpload","file","isImage","type","startsWith","isLt2M","size","submitForm","validate","valid","goBack","resetForm","resetFields","handlePublishToPlatforms","length","warning","platformId","push"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/article/edit.vue"],"sourcesContent":["<template>\n  <div class=\"article-edit-container app-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>{{ isEdit ? '编辑文章' : '创建文章' }}</span>\n          <div class=\"right-menu\">\n            <el-button @click=\"goBack\">返回</el-button>\n          </div>\n        </div>\n      </template>\n      \n      <el-form\n        ref=\"articleFormRef\"\n        :model=\"articleForm\"\n        :rules=\"articleRules\"\n        label-width=\"100px\"\n        class=\"article-form\"\n      >\n        <el-form-item label=\"标题\" prop=\"title\">\n          <el-input v-model=\"articleForm.title\" placeholder=\"请输入文章标题\" />\n        </el-form-item>\n        \n        <el-form-item label=\"分类\" prop=\"articleCategoryId\">\n          <el-select v-model=\"articleForm.articleCategoryId\" placeholder=\"请选择文章分类\" style=\"width: 100%\">\n            <el-option\n              v-for=\"item in categoryList\"\n              :key=\"item.id\"\n              :label=\"item.name\"\n              :value=\"item.id\"\n            />\n          </el-select>\n        </el-form-item>\n        \n        <el-form-item label=\"摘要\" prop=\"summary\">\n          <el-input\n            v-model=\"articleForm.summary\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入文章摘要\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"封面图片\" prop=\"coverImage\">\n          <el-upload\n            class=\"cover-uploader\"\n            action=\"/api/upload\"\n            :show-file-list=\"false\"\n            :on-success=\"handleCoverSuccess\"\n            :before-upload=\"beforeCoverUpload\"\n          >\n            <img v-if=\"articleForm.coverImage\" :src=\"articleForm.coverImage\" class=\"cover-image\" />\n            <el-icon v-else class=\"cover-uploader-icon\"><Plus /></el-icon>\n          </el-upload>\n        </el-form-item>\n        \n        <el-form-item label=\"内容\" prop=\"contentMarkdown\">\n          <div class=\"editor-container\">\n            <el-tabs v-model=\"activeTab\" class=\"editor-tabs\">\n              <el-tab-pane label=\"编辑\" name=\"edit\">\n                <el-input\n                  v-model=\"articleForm.contentMarkdown\"\n                  type=\"textarea\"\n                  :rows=\"20\"\n                  placeholder=\"请输入文章内容（支持Markdown格式）\"\n                />\n              </el-tab-pane>\n              <el-tab-pane label=\"预览\" name=\"preview\">\n                <div class=\"markdown-preview\" v-html=\"renderedContent\"></div>\n              </el-tab-pane>\n            </el-tabs>\n          </div>\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"articleForm.status\">\n            <el-radio label=\"DRAFT\">草稿</el-radio>\n            <el-radio label=\"PUBLISHED\">发布</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button type=\"primary\" :loading=\"submitLoading\" @click=\"submitForm\">保存</el-button>\n          <el-button @click=\"resetForm\">重置</el-button>\n        </el-form-item>\n      </el-form>\n    </el-card>\n    \n    <!-- 平台发布对话框 -->\n    <el-dialog\n      v-model=\"publishDialogVisible\"\n      title=\"发布到平台\"\n      width=\"500px\"\n    >\n      <el-form label-width=\"100px\">\n        <el-form-item label=\"选择平台\">\n          <el-checkbox-group v-model=\"selectedPlatforms\">\n            <el-checkbox\n              v-for=\"item in platformList\"\n              :key=\"item.id\"\n              :label=\"item.id\"\n            >\n              {{ item.platformName }}\n            </el-checkbox>\n          </el-checkbox-group>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"publishDialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" :loading=\"publishLoading\" @click=\"handlePublishToPlatforms\">\n            发布\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, computed, onMounted, watch } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { marked } from 'marked'\nimport { getArticle, createArticle, updateArticle } from '@/api/article'\nimport { getCategories } from '@/api/category'\nimport { getPlatformConfigs, publishArticle } from '@/api/platform'\n\nconst route = useRoute()\nconst router = useRouter()\n\n// 是否为编辑模式\nconst isEdit = computed(() => !!route.params.id)\n\n// 表单引用\nconst articleFormRef = ref(null)\nconst submitLoading = ref(false)\n\n// 文章表单\nconst articleForm = reactive({\n  id: null,\n  title: '',\n  articleCategoryId: null,\n  summary: '',\n  content: '',\n  contentHtml: '',\n  contentMarkdown: '',\n  coverImage: '',\n  status: 'DRAFT'\n})\n\n// 表单验证规则\nconst articleRules = {\n  title: [\n    { required: true, message: '请输入文章标题', trigger: 'blur' },\n    { min: 2, max: 100, message: '长度在 2 到 100 个字符', trigger: 'blur' }\n  ],\n  articleCategoryId: [\n    { required: true, message: '请选择文章分类', trigger: 'change' }\n  ],\n  contentMarkdown: [\n    { required: true, message: '请输入文章内容', trigger: 'blur' }\n  ]\n}\n\n// 分类列表\nconst categoryList = ref([])\n\n// 编辑器相关\nconst activeTab = ref('edit')\nconst renderedContent = computed(() => {\n  return marked(articleForm.contentMarkdown || '')\n})\n\n// 平台发布相关\nconst publishDialogVisible = ref(false)\nconst publishLoading = ref(false)\nconst platformList = ref([])\nconst selectedPlatforms = ref([])\n\n// 监听Markdown内容变化，自动生成HTML内容\nwatch(() => articleForm.contentMarkdown, (val) => {\n  if (val) {\n    articleForm.contentHtml = marked(val)\n    articleForm.content = val\n  }\n})\n\n// 获取文章详情\nconst getArticleDetail = async (id) => {\n  try {\n    const { data } = await getArticle(id)\n    Object.assign(articleForm, data)\n  } catch (error) {\n    console.error('获取文章详情失败:', error)\n    ElMessage.error('获取文章详情失败')\n  }\n}\n\n// 获取分类列表\nconst getCategoryList = async () => {\n  try {\n    const { data } = await getCategories()\n    categoryList.value = data\n  } catch (error) {\n    console.error('获取分类列表失败:', error)\n  }\n}\n\n// 获取平台列表\nconst getPlatformList = async () => {\n  try {\n    const { data } = await getPlatformConfigs()\n    platformList.value = data\n  } catch (error) {\n    console.error('获取平台列表失败:', error)\n  }\n}\n\n// 封面上传成功\nconst handleCoverSuccess = (res) => {\n  articleForm.coverImage = res.data.url\n  ElMessage.success('上传成功')\n}\n\n// 封面上传前校验\nconst beforeCoverUpload = (file) => {\n  const isImage = file.type.startsWith('image/')\n  const isLt2M = file.size / 1024 / 1024 < 2\n\n  if (!isImage) {\n    ElMessage.error('只能上传图片文件!')\n  }\n  if (!isLt2M) {\n    ElMessage.error('图片大小不能超过 2MB!')\n  }\n  return isImage && isLt2M\n}\n\n// 提交表单\nconst submitForm = () => {\n  articleFormRef.value.validate(async (valid) => {\n    if (valid) {\n      submitLoading.value = true\n      try {\n        if (isEdit.value) {\n          await updateArticle(articleForm.id, articleForm)\n          ElMessage.success('更新成功')\n        } else {\n          const { data } = await createArticle(articleForm)\n          articleForm.id = data.id\n          ElMessage.success('创建成功')\n        }\n        \n        if (articleForm.status === 'PUBLISHED') {\n          publishDialogVisible.value = true\n        } else {\n          goBack()\n        }\n      } catch (error) {\n        console.error('保存文章失败:', error)\n        ElMessage.error('保存文章失败')\n      } finally {\n        submitLoading.value = false\n      }\n    } else {\n      return false\n    }\n  })\n}\n\n// 重置表单\nconst resetForm = () => {\n  if (isEdit.value) {\n    getArticleDetail(route.params.id)\n  } else {\n    articleFormRef.value.resetFields()\n  }\n}\n\n// 发布到平台\nconst handlePublishToPlatforms = async () => {\n  if (selectedPlatforms.value.length === 0) {\n    ElMessage.warning('请选择至少一个平台')\n    return\n  }\n  \n  publishLoading.value = true\n  try {\n    for (const platformId of selectedPlatforms.value) {\n      await publishArticle(articleForm.id, platformId)\n    }\n    ElMessage.success('发布成功')\n    publishDialogVisible.value = false\n    goBack()\n  } catch (error) {\n    console.error('发布到平台失败:', error)\n    ElMessage.error('发布到平台失败')\n  } finally {\n    publishLoading.value = false\n  }\n}\n\n// 返回列表页\nconst goBack = () => {\n  router.push('/article')\n}\n\nonMounted(() => {\n  getCategoryList()\n  getPlatformList()\n  \n  if (isEdit.value) {\n    getArticleDetail(route.params.id)\n  }\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.article-edit-container {\n  .article-form {\n    max-width: 1000px;\n  }\n  \n  .cover-uploader {\n    width: 300px;\n    \n    .cover-image {\n      width: 300px;\n      height: 180px;\n      object-fit: cover;\n      border-radius: 4px;\n    }\n    \n    .cover-uploader-icon {\n      font-size: 28px;\n      color: #8c939d;\n      width: 300px;\n      height: 180px;\n      line-height: 180px;\n      text-align: center;\n      border: 1px dashed #d9d9d9;\n      border-radius: 4px;\n      cursor: pointer;\n    }\n  }\n  \n  .editor-container {\n    border: 1px solid #dcdfe6;\n    border-radius: 4px;\n    \n    .editor-tabs {\n      height: 100%;\n      \n      :deep(.el-tabs__content) {\n        padding: 10px;\n      }\n    }\n    \n    .markdown-preview {\n      min-height: 300px;\n      max-height: 500px;\n      overflow-y: auto;\n      padding: 10px;\n      \n      h1, h2, h3, h4, h5, h6 {\n        margin-top: 1em;\n        margin-bottom: 0.5em;\n      }\n      \n      p {\n        margin: 0.5em 0;\n      }\n      \n      img {\n        max-width: 100%;\n      }\n      \n      pre {\n        background-color: #f5f7fa;\n        padding: 10px;\n        border-radius: 4px;\n        overflow-x: auto;\n      }\n      \n      code {\n        background-color: #f5f7fa;\n        padding: 2px 4px;\n        border-radius: 2px;\n      }\n      \n      blockquote {\n        border-left: 4px solid #dcdfe6;\n        padding-left: 10px;\n        color: #606266;\n        margin: 10px 0;\n      }\n      \n      table {\n        border-collapse: collapse;\n        width: 100%;\n        \n        th, td {\n          border: 1px solid #dcdfe6;\n          padding: 8px;\n        }\n        \n        th {\n          background-color: #f5f7fa;\n        }\n      }\n    }\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}