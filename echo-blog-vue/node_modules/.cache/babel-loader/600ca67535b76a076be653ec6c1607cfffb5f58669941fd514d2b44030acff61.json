{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"login-container\"\n};\nconst _hoisted_2 = {\n  class: \"login-form-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_View = _resolveComponent(\"View\");\n  const _component_Hide = _resolveComponent(\"Hide\");\n  const _component_el_icon = _resolveComponent(\"el-icon\");\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"title-container\"\n  }, [_createElementVNode(\"h3\", {\n    class: \"title\"\n  }, \"Echo博客管理系统\")], -1 /* HOISTED */)), _createVNode(_component_el_form, {\n    ref: \"loginFormRef\",\n    model: $setup.loginForm,\n    rules: $setup.loginRules,\n    class: \"login-form\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      prop: \"username\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.loginForm.username,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loginForm.username = $event),\n        placeholder: \"用户名\",\n        type: \"text\",\n        \"prefix-icon\": \"User\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      prop: \"password\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.loginForm.password,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.loginForm.password = $event),\n        placeholder: \"密码\",\n        type: $setup.passwordVisible ? 'text' : 'password',\n        \"prefix-icon\": \"Lock\",\n        autocomplete: \"off\"\n      }, {\n        suffix: _withCtx(() => [_createVNode(_component_el_icon, {\n          class: \"password-icon\",\n          onClick: _cache[1] || (_cache[1] = $event => $setup.passwordVisible = !$setup.passwordVisible)\n        }, {\n          default: _withCtx(() => [$setup.passwordVisible ? (_openBlock(), _createBlock(_component_View, {\n            key: 0\n          })) : (_openBlock(), _createBlock(_component_Hide, {\n            key: 1\n          }))]),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\", \"type\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        loading: $setup.loading,\n        type: \"primary\",\n        class: \"login-button\",\n        onClick: $setup.handleLogin\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.loading ? '登录中...' : '登录'), 1 /* TEXT */)]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"loading\"])]),\n      _: 1 /* STABLE */\n    }), _cache[3] || (_cache[3] = _createElementVNode(\"div\", {\n      class: \"tips\"\n    }, [_createElementVNode(\"span\", null, \"用户名: admin\"), _createElementVNode(\"span\", null, \"密码: 123456\")], -1 /* HOISTED */))]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\"])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_form","ref","model","$setup","loginForm","rules","loginRules","default","_withCtx","_component_el_form_item","prop","_component_el_input","modelValue","username","_cache","$event","placeholder","type","autocomplete","_","password","passwordVisible","suffix","_component_el_icon","onClick","_createBlock","_component_View","key","_component_Hide","_component_el_button","loading","handleLogin","_createTextVNode","_toDisplayString"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/login/index.vue"],"sourcesContent":["<template>\n  <div class=\"login-container\">\n    <div class=\"login-form-container\">\n      <div class=\"title-container\">\n        <h3 class=\"title\">Echo博客管理系统</h3>\n      </div>\n      \n      <el-form ref=\"loginFormRef\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\n        <el-form-item prop=\"username\">\n          <el-input\n            v-model=\"loginForm.username\"\n            placeholder=\"用户名\"\n            type=\"text\"\n            prefix-icon=\"User\"\n            autocomplete=\"off\"\n          />\n        </el-form-item>\n        \n        <el-form-item prop=\"password\">\n          <el-input\n            v-model=\"loginForm.password\"\n            placeholder=\"密码\"\n            :type=\"passwordVisible ? 'text' : 'password'\"\n            prefix-icon=\"Lock\"\n            autocomplete=\"off\"\n          >\n            <template #suffix>\n              <el-icon class=\"password-icon\" @click=\"passwordVisible = !passwordVisible\">\n                <View v-if=\"passwordVisible\" />\n                <Hide v-else />\n              </el-icon>\n            </template>\n          </el-input>\n        </el-form-item>\n        \n        <el-form-item>\n          <el-button :loading=\"loading\" type=\"primary\" class=\"login-button\" @click=\"handleLogin\">\n            {{ loading ? '登录中...' : '登录' }}\n          </el-button>\n        </el-form-item>\n        \n        <div class=\"tips\">\n          <span>用户名: admin</span>\n          <span>密码: 123456</span>\n        </div>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\nimport { useUserStore } from '@/store/user'\n\nconst router = useRouter()\nconst userStore = useUserStore()\n\n// 登录表单\nconst loginFormRef = ref(null)\nconst loginForm = reactive({\n  username: '',\n  password: ''\n})\n\n// 表单验证规则\nconst loginRules = {\n  username: [\n    { required: true, message: '请输入用户名', trigger: 'blur' },\n    { min: 3, max: 20, message: '长度在 3 到 20 个字符', trigger: 'blur' }\n  ],\n  password: [\n    { required: true, message: '请输入密码', trigger: 'blur' },\n    { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n  ]\n}\n\n// 密码可见性\nconst passwordVisible = ref(false)\n\n// 加载状态\nconst loading = ref(false)\n\n// 处理登录\nconst handleLogin = () => {\n  loginFormRef.value.validate(async (valid) => {\n    if (valid) {\n      loading.value = true\n      try {\n        await userStore.login(loginForm)\n        await userStore.getUserInfo()\n        ElMessage.success('登录成功')\n        router.push('/')\n      } catch (error) {\n        ElMessage.error(error.message || '登录失败，请重试')\n      } finally {\n        loading.value = false\n      }\n    } else {\n      return false\n    }\n  })\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.login-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #2d3a4b;\n  \n  .login-form-container {\n    width: 350px;\n    padding: 30px 35px;\n    background-color: #fff;\n    border-radius: 5px;\n    box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1);\n    \n    .title-container {\n      text-align: center;\n      margin-bottom: 30px;\n      \n      .title {\n        font-size: 26px;\n        color: #303133;\n        margin: 0;\n      }\n    }\n    \n    .login-form {\n      .password-icon {\n        cursor: pointer;\n      }\n      \n      .login-button {\n        width: 100%;\n      }\n      \n      .tips {\n        margin-top: 15px;\n        display: flex;\n        justify-content: space-between;\n        color: #909399;\n        font-size: 13px;\n      }\n    }\n  }\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAiB;;EACrBA,KAAK,EAAC;AAAsB;;;;;;;;;uBADnCC,mBAAA,CA8CM,OA9CNC,UA8CM,GA7CJC,mBAAA,CA4CM,OA5CNC,UA4CM,G,0BA3CJD,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAiB,IAC1BG,mBAAA,CAAiC;IAA7BH,KAAK,EAAC;EAAO,GAAC,YAAU,E,sBAG9BK,YAAA,CAsCUC,kBAAA;IAtCDC,GAAG,EAAC,cAAc;IAAEC,KAAK,EAAEC,MAAA,CAAAC,SAAS;IAAGC,KAAK,EAAEF,MAAA,CAAAG,UAAU;IAAEZ,KAAK,EAAC;;IAP/Ea,OAAA,EAAAC,QAAA,CAQQ,MAQe,CARfT,YAAA,CAQeU,uBAAA;MARDC,IAAI,EAAC;IAAU;MARrCH,OAAA,EAAAC,QAAA,CASU,MAME,CANFT,YAAA,CAMEY,mBAAA;QAfZC,UAAA,EAUqBT,MAAA,CAAAC,SAAS,CAACS,QAAQ;QAVvC,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUqBZ,MAAA,CAAAC,SAAS,CAACS,QAAQ,GAAAE,MAAA;QAC3BC,WAAW,EAAC,KAAK;QACjBC,IAAI,EAAC,MAAM;QACX,aAAW,EAAC,MAAM;QAClBC,YAAY,EAAC;;MAdzBC,CAAA;QAkBQpB,YAAA,CAeeU,uBAAA;MAfDC,IAAI,EAAC;IAAU;MAlBrCH,OAAA,EAAAC,QAAA,CAmBU,MAaW,CAbXT,YAAA,CAaWY,mBAAA;QAhCrBC,UAAA,EAoBqBT,MAAA,CAAAC,SAAS,CAACgB,QAAQ;QApBvC,uBAAAN,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBqBZ,MAAA,CAAAC,SAAS,CAACgB,QAAQ,GAAAL,MAAA;QAC3BC,WAAW,EAAC,IAAI;QACfC,IAAI,EAAEd,MAAA,CAAAkB,eAAe;QACtB,aAAW,EAAC,MAAM;QAClBH,YAAY,EAAC;;QAEFI,MAAM,EAAAd,QAAA,CACf,MAGU,CAHVT,YAAA,CAGUwB,kBAAA;UAHD7B,KAAK,EAAC,eAAe;UAAE8B,OAAK,EAAAV,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEZ,MAAA,CAAAkB,eAAe,IAAIlB,MAAA,CAAAkB,eAAe;;UA3BvFd,OAAA,EAAAC,QAAA,CA4BgB,MAA+B,CAAnBL,MAAA,CAAAkB,eAAe,I,cAA3BI,YAAA,CAA+BC,eAAA;YA5B/CC,GAAA;UAAA,O,cA6BgBF,YAAA,CAAeG,eAAA;YA7B/BD,GAAA;UAAA,I;UAAAR,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;QAmCQpB,YAAA,CAIeU,uBAAA;MAvCvBF,OAAA,EAAAC,QAAA,CAoCU,MAEY,CAFZT,YAAA,CAEY8B,oBAAA;QAFAC,OAAO,EAAE3B,MAAA,CAAA2B,OAAO;QAAEb,IAAI,EAAC,SAAS;QAACvB,KAAK,EAAC,cAAc;QAAE8B,OAAK,EAAErB,MAAA,CAAA4B;;QApCpFxB,OAAA,EAAAC,QAAA,CAqCY,MAA+B,CArC3CwB,gBAAA,CAAAC,gBAAA,CAqCe9B,MAAA,CAAA2B,OAAO,mC;QArCtBX,CAAA;;MAAAA,CAAA;kCAyCQtB,mBAAA,CAGM;MAHDH,KAAK,EAAC;IAAM,IACfG,mBAAA,CAAuB,cAAjB,YAAU,GAChBA,mBAAA,CAAuB,cAAjB,YAAU,E;IA3C1BsB,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}