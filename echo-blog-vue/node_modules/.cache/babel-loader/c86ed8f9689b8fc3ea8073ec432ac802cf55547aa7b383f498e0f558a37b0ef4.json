{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"task-create-container\"\n};\nconst _hoisted_2 = {\n  class: \"page-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_input = _resolveComponent(\"el-input\");\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n  const _component_el_option = _resolveComponent(\"el-option\");\n  const _component_el_select = _resolveComponent(\"el-select\");\n  const _component_el_date_picker = _resolveComponent(\"el-date-picker\");\n  const _component_el_form = _resolveComponent(\"el-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"创建任务\", -1 /* HOISTED */)), _createVNode(_component_el_button, {\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/task'))\n  }, {\n    default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"返回列表\")])),\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_el_form, {\n    model: $setup.taskForm,\n    rules: $setup.rules,\n    ref: \"taskFormRef\",\n    \"label-width\": \"100px\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_form_item, {\n      label: \"任务名称\",\n      prop: \"name\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.taskForm.name,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.taskForm.name = $event),\n        placeholder: \"请输入任务名称\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"任务类型\",\n      prop: \"type\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_select, {\n        modelValue: $setup.taskForm.type,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.taskForm.type = $event),\n        placeholder: \"请选择任务类型\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_option, {\n          label: \"文章发布\",\n          value: \"PUBLISH\"\n        }), _createVNode(_component_el_option, {\n          label: \"内容采集\",\n          value: \"COLLECT\"\n        }), _createVNode(_component_el_option, {\n          label: \"数据分析\",\n          value: \"ANALYZE\"\n        })]),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"执行时间\",\n      prop: \"executeTime\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_date_picker, {\n        modelValue: $setup.taskForm.executeTime,\n        \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.taskForm.executeTime = $event),\n        type: \"datetime\",\n        placeholder: \"选择执行时间\",\n        style: {\n          \"width\": \"100%\"\n        }\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, {\n      label: \"任务描述\",\n      prop: \"description\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_input, {\n        modelValue: $setup.taskForm.description,\n        \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.taskForm.description = $event),\n        type: \"textarea\",\n        rows: 4,\n        placeholder: \"请输入任务描述\"\n      }, null, 8 /* PROPS */, [\"modelValue\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_form_item, null, {\n      default: _withCtx(() => [_createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: $setup.submitForm\n      }, {\n        default: _withCtx(() => _cache[7] || (_cache[7] = [_createTextVNode(\"创建任务\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_el_button, {\n        onClick: $setup.resetForm\n      }, {\n        default: _withCtx(() => _cache[8] || (_cache[8] = [_createTextVNode(\"重置\")])),\n        _: 1 /* STABLE */\n      }, 8 /* PROPS */, [\"onClick\"])]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"model\", \"rules\"])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_createVNode","_component_el_button","onClick","_cache","$event","_ctx","$router","push","default","_withCtx","_createTextVNode","_","_component_el_form","model","$setup","taskForm","rules","ref","_component_el_form_item","label","prop","_component_el_input","modelValue","name","placeholder","_component_el_select","type","style","_component_el_option","value","_component_el_date_picker","executeTime","description","rows","submitForm","resetForm"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/task/create.vue"],"sourcesContent":["<template>\n  <div class=\"task-create-container\">\n    <div class=\"page-header\">\n      <h2>创建任务</h2>\n      <el-button @click=\"$router.push('/task')\">返回列表</el-button>\n    </div>\n    \n    <el-form :model=\"taskForm\" :rules=\"rules\" ref=\"taskFormRef\" label-width=\"100px\">\n      <el-form-item label=\"任务名称\" prop=\"name\">\n        <el-input v-model=\"taskForm.name\" placeholder=\"请输入任务名称\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"任务类型\" prop=\"type\">\n        <el-select v-model=\"taskForm.type\" placeholder=\"请选择任务类型\" style=\"width: 100%;\">\n          <el-option label=\"文章发布\" value=\"PUBLISH\"></el-option>\n          <el-option label=\"内容采集\" value=\"COLLECT\"></el-option>\n          <el-option label=\"数据分析\" value=\"ANALYZE\"></el-option>\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"执行时间\" prop=\"executeTime\">\n        <el-date-picker\n          v-model=\"taskForm.executeTime\"\n          type=\"datetime\"\n          placeholder=\"选择执行时间\"\n          style=\"width: 100%;\"\n        ></el-date-picker>\n      </el-form-item>\n      \n      <el-form-item label=\"任务描述\" prop=\"description\">\n        <el-input\n          v-model=\"taskForm.description\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder=\"请输入任务描述\"\n        ></el-input>\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">创建任务</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'TaskCreate',\n  setup() {\n    const router = useRouter()\n    const taskFormRef = ref(null)\n    \n    const taskForm = reactive({\n      name: '',\n      type: '',\n      executeTime: '',\n      description: ''\n    })\n    \n    const rules = {\n      name: [\n        { required: true, message: '请输入任务名称', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ],\n      type: [\n        { required: true, message: '请选择任务类型', trigger: 'change' }\n      ],\n      executeTime: [\n        { required: true, message: '请选择执行时间', trigger: 'change' }\n      ]\n    }\n    \n    const submitForm = async () => {\n      if (!taskFormRef.value) return\n      \n      await taskFormRef.value.validate((valid) => {\n        if (valid) {\n          // 这里应该调用API创建任务\n          ElMessage.success('任务创建成功')\n          router.push('/task')\n        }\n      })\n    }\n    \n    const resetForm = () => {\n      if (taskFormRef.value) {\n        taskFormRef.value.resetFields()\n      }\n    }\n    \n    return {\n      taskFormRef,\n      taskForm,\n      rules,\n      submitForm,\n      resetForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.task-create-container {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n</style> "],"mappings":";;EACOA,KAAK,EAAC;AAAuB;;EAC3BA,KAAK,EAAC;AAAa;;;;;;;;;uBAD1BC,mBAAA,CA0CM,OA1CNC,UA0CM,GAzCJC,mBAAA,CAGM,OAHNC,UAGM,G,0BAFJD,mBAAA,CAAa,YAAT,MAAI,sBACRE,YAAA,CAA0DC,oBAAA;IAA9CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,IAAA,CAAAC,OAAO,CAACC,IAAI;;IAJrCC,OAAA,EAAAC,QAAA,CAIgD,MAAIN,MAAA,QAAAA,MAAA,OAJpDO,gBAAA,CAIgD,MAAI,E;IAJpDC,CAAA;QAOIX,YAAA,CAmCUY,kBAAA;IAnCAC,KAAK,EAAEC,MAAA,CAAAC,QAAQ;IAAGC,KAAK,EAAEF,MAAA,CAAAE,KAAK;IAAEC,GAAG,EAAC,aAAa;IAAC,aAAW,EAAC;;IAP5ET,OAAA,EAAAC,QAAA,CAQM,MAEe,CAFfT,YAAA,CAEekB,uBAAA;MAFDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MARtCZ,OAAA,EAAAC,QAAA,CASQ,MAAmE,CAAnET,YAAA,CAAmEqB,mBAAA;QAT3EC,UAAA,EAS2BR,MAAA,CAAAC,QAAQ,CAACQ,IAAI;QATxC,uBAAApB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAS2BU,MAAA,CAAAC,QAAQ,CAACQ,IAAI,GAAAnB,MAAA;QAAEoB,WAAW,EAAC;;MATtDb,CAAA;QAYMX,YAAA,CAMekB,uBAAA;MANDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MAZtCZ,OAAA,EAAAC,QAAA,CAaQ,MAIY,CAJZT,YAAA,CAIYyB,oBAAA;QAjBpBH,UAAA,EAa4BR,MAAA,CAAAC,QAAQ,CAACW,IAAI;QAbzC,uBAAAvB,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAa4BU,MAAA,CAAAC,QAAQ,CAACW,IAAI,GAAAtB,MAAA;QAAEoB,WAAW,EAAC,SAAS;QAACG,KAAoB,EAApB;UAAA;QAAA;;QAbjEnB,OAAA,EAAAC,QAAA,CAcU,MAAoD,CAApDT,YAAA,CAAoD4B,oBAAA;UAAzCT,KAAK,EAAC,MAAM;UAACU,KAAK,EAAC;YAC9B7B,YAAA,CAAoD4B,oBAAA;UAAzCT,KAAK,EAAC,MAAM;UAACU,KAAK,EAAC;YAC9B7B,YAAA,CAAoD4B,oBAAA;UAAzCT,KAAK,EAAC,MAAM;UAACU,KAAK,EAAC;;QAhBxClB,CAAA;;MAAAA,CAAA;QAoBMX,YAAA,CAOekB,uBAAA;MAPDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MApBtCZ,OAAA,EAAAC,QAAA,CAqBQ,MAKkB,CALlBT,YAAA,CAKkB8B,yBAAA;QA1B1BR,UAAA,EAsBmBR,MAAA,CAAAC,QAAQ,CAACgB,WAAW;QAtBvC,uBAAA5B,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAsBmBU,MAAA,CAAAC,QAAQ,CAACgB,WAAW,GAAA3B,MAAA;QAC7BsB,IAAI,EAAC,UAAU;QACfF,WAAW,EAAC,QAAQ;QACpBG,KAAoB,EAApB;UAAA;QAAA;;MAzBVhB,CAAA;QA6BMX,YAAA,CAOekB,uBAAA;MAPDC,KAAK,EAAC,MAAM;MAACC,IAAI,EAAC;;MA7BtCZ,OAAA,EAAAC,QAAA,CA8BQ,MAKY,CALZT,YAAA,CAKYqB,mBAAA;QAnCpBC,UAAA,EA+BmBR,MAAA,CAAAC,QAAQ,CAACiB,WAAW;QA/BvC,uBAAA7B,MAAA,QAAAA,MAAA,MAAAC,MAAA,IA+BmBU,MAAA,CAAAC,QAAQ,CAACiB,WAAW,GAAA5B,MAAA;QAC7BsB,IAAI,EAAC,UAAU;QACdO,IAAI,EAAE,CAAC;QACRT,WAAW,EAAC;;MAlCtBb,CAAA;QAsCMX,YAAA,CAGekB,uBAAA;MAzCrBV,OAAA,EAAAC,QAAA,CAuCQ,MAA8D,CAA9DT,YAAA,CAA8DC,oBAAA;QAAnDyB,IAAI,EAAC,SAAS;QAAExB,OAAK,EAAEY,MAAA,CAAAoB;;QAvC1C1B,OAAA,EAAAC,QAAA,CAuCsD,MAAIN,MAAA,QAAAA,MAAA,OAvC1DO,gBAAA,CAuCsD,MAAI,E;QAvC1DC,CAAA;sCAwCQX,YAAA,CAA4CC,oBAAA;QAAhCC,OAAK,EAAEY,MAAA,CAAAqB;MAAS;QAxCpC3B,OAAA,EAAAC,QAAA,CAwCsC,MAAEN,MAAA,QAAAA,MAAA,OAxCxCO,gBAAA,CAwCsC,IAAE,E;QAxCxCC,CAAA;;MAAAA,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}