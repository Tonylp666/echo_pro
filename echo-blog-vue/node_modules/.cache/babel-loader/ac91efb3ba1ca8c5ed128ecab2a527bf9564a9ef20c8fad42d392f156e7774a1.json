{"ast":null,"code":"import { ref, reactive } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'TaskCreate',\n  setup() {\n    const router = useRouter();\n    const taskFormRef = ref(null);\n    const taskForm = reactive({\n      name: '',\n      type: '',\n      executeTime: '',\n      description: ''\n    });\n    const rules = {\n      name: [{\n        required: true,\n        message: '请输入任务名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      type: [{\n        required: true,\n        message: '请选择任务类型',\n        trigger: 'change'\n      }],\n      executeTime: [{\n        required: true,\n        message: '请选择执行时间',\n        trigger: 'change'\n      }]\n    };\n    const submitForm = async () => {\n      if (!taskFormRef.value) return;\n      await taskFormRef.value.validate(valid => {\n        if (valid) {\n          // 这里应该调用API创建任务\n          ElMessage.success('任务创建成功');\n          router.push('/task');\n        }\n      });\n    };\n    const resetForm = () => {\n      if (taskFormRef.value) {\n        taskFormRef.value.resetFields();\n      }\n    };\n    return {\n      taskFormRef,\n      taskForm,\n      rules,\n      submitForm,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","useRouter","ElMessage","name","setup","router","taskFormRef","taskForm","type","executeTime","description","rules","required","message","trigger","min","max","submitForm","value","validate","valid","success","push","resetForm","resetFields"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/task/create.vue"],"sourcesContent":["<template>\n  <div class=\"task-create-container\">\n    <div class=\"page-header\">\n      <h2>创建任务</h2>\n      <el-button @click=\"$router.push('/task')\">返回列表</el-button>\n    </div>\n    \n    <el-form :model=\"taskForm\" :rules=\"rules\" ref=\"taskFormRef\" label-width=\"100px\">\n      <el-form-item label=\"任务名称\" prop=\"name\">\n        <el-input v-model=\"taskForm.name\" placeholder=\"请输入任务名称\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"任务类型\" prop=\"type\">\n        <el-select v-model=\"taskForm.type\" placeholder=\"请选择任务类型\" style=\"width: 100%;\">\n          <el-option label=\"文章发布\" value=\"PUBLISH\"></el-option>\n          <el-option label=\"内容采集\" value=\"COLLECT\"></el-option>\n          <el-option label=\"数据分析\" value=\"ANALYZE\"></el-option>\n        </el-select>\n      </el-form-item>\n      \n      <el-form-item label=\"执行时间\" prop=\"executeTime\">\n        <el-date-picker\n          v-model=\"taskForm.executeTime\"\n          type=\"datetime\"\n          placeholder=\"选择执行时间\"\n          style=\"width: 100%;\"\n        ></el-date-picker>\n      </el-form-item>\n      \n      <el-form-item label=\"任务描述\" prop=\"description\">\n        <el-input\n          v-model=\"taskForm.description\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder=\"请输入任务描述\"\n        ></el-input>\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">创建任务</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'TaskCreate',\n  setup() {\n    const router = useRouter()\n    const taskFormRef = ref(null)\n    \n    const taskForm = reactive({\n      name: '',\n      type: '',\n      executeTime: '',\n      description: ''\n    })\n    \n    const rules = {\n      name: [\n        { required: true, message: '请输入任务名称', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ],\n      type: [\n        { required: true, message: '请选择任务类型', trigger: 'change' }\n      ],\n      executeTime: [\n        { required: true, message: '请选择执行时间', trigger: 'change' }\n      ]\n    }\n    \n    const submitForm = async () => {\n      if (!taskFormRef.value) return\n      \n      await taskFormRef.value.validate((valid) => {\n        if (valid) {\n          // 这里应该调用API创建任务\n          ElMessage.success('任务创建成功')\n          router.push('/task')\n        }\n      })\n    }\n    \n    const resetForm = () => {\n      if (taskFormRef.value) {\n        taskFormRef.value.resetFields()\n      }\n    }\n    \n    return {\n      taskFormRef,\n      taskForm,\n      rules,\n      submitForm,\n      resetForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.task-create-container {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n</style> "],"mappings":"AA+CA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAI;AAClC,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,SAAQ,QAAS,cAAa;AAEvC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,MAAK,GAAIJ,SAAS,CAAC;IACzB,MAAMK,WAAU,GAAIP,GAAG,CAAC,IAAI;IAE5B,MAAMQ,QAAO,GAAIP,QAAQ,CAAC;MACxBG,IAAI,EAAE,EAAE;MACRK,IAAI,EAAE,EAAE;MACRC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE;IACf,CAAC;IAED,MAAMC,KAAI,GAAI;MACZR,IAAI,EAAE,CACJ;QAAES,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAO,CAAC,EACvD;QAAEC,GAAG,EAAE,CAAC;QAAEC,GAAG,EAAE,EAAE;QAAEH,OAAO,EAAE,gBAAgB;QAAEC,OAAO,EAAE;MAAO,EAC/D;MACDN,IAAI,EAAE,CACJ;QAAEI,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAS,EACzD;MACDL,WAAW,EAAE,CACX;QAAEG,QAAQ,EAAE,IAAI;QAAEC,OAAO,EAAE,SAAS;QAAEC,OAAO,EAAE;MAAS;IAE5D;IAEA,MAAMG,UAAS,GAAI,MAAAA,CAAA,KAAY;MAC7B,IAAI,CAACX,WAAW,CAACY,KAAK,EAAE;MAExB,MAAMZ,WAAW,CAACY,KAAK,CAACC,QAAQ,CAAEC,KAAK,IAAK;QAC1C,IAAIA,KAAK,EAAE;UACT;UACAlB,SAAS,CAACmB,OAAO,CAAC,QAAQ;UAC1BhB,MAAM,CAACiB,IAAI,CAAC,OAAO;QACrB;MACF,CAAC;IACH;IAEA,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtB,IAAIjB,WAAW,CAACY,KAAK,EAAE;QACrBZ,WAAW,CAACY,KAAK,CAACM,WAAW,CAAC;MAChC;IACF;IAEA,OAAO;MACLlB,WAAW;MACXC,QAAQ;MACRI,KAAK;MACLM,UAAU;MACVM;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}