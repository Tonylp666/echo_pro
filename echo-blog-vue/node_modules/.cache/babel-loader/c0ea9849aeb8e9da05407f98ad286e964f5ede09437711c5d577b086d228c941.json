{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { useRoute } from 'vue-router';\nexport default {\n  name: 'Breadcrumb',\n  setup() {\n    const route = useRoute();\n    const breadcrumbs = ref([]);\n    const getBreadcrumbs = () => {\n      const matched = route.matched.filter(item => item.meta && item.meta.title);\n      const first = matched[0];\n      if (first && first.path !== '/dashboard') {\n        breadcrumbs.value = [{\n          path: '/dashboard',\n          title: '扶뒬못'\n        }, ...matched.map(item => {\n          return {\n            path: item.path,\n            title: item.meta.title\n          };\n        })];\n      } else {\n        breadcrumbs.value = matched.map(item => {\n          return {\n            path: item.path,\n            title: item.meta.title\n          };\n        });\n      }\n    };\n    getBreadcrumbs();\n    watch(() => route.path, () => {\n      getBreadcrumbs();\n    });\n    return {\n      breadcrumbs\n    };\n  }\n};","map":{"version":3,"names":["ref","watch","useRoute","name","setup","route","breadcrumbs","getBreadcrumbs","matched","filter","item","meta","title","first","path","value","map"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/layout/components/Breadcrumb.vue"],"sourcesContent":["<template>\n  <el-breadcrumb separator=\"/\">\n    <el-breadcrumb-item v-for=\"(item, index) in breadcrumbs\" :key=\"index\" :to=\"item.path\">\n      {{ item.title }}\n    </el-breadcrumb-item>\n  </el-breadcrumb>\n</template>\n\n<script>\nimport { ref, watch } from 'vue'\nimport { useRoute } from 'vue-router'\n\nexport default {\n  name: 'Breadcrumb',\n  setup() {\n    const route = useRoute()\n    const breadcrumbs = ref([])\n    \n    const getBreadcrumbs = () => {\n      const matched = route.matched.filter(item => item.meta && item.meta.title)\n      \n      const first = matched[0]\n      if (first && first.path !== '/dashboard') {\n        breadcrumbs.value = [\n          { path: '/dashboard', title: '扶뒬못' },\n          ...matched.map(item => {\n            return {\n              path: item.path,\n              title: item.meta.title\n            }\n          })\n        ]\n      } else {\n        breadcrumbs.value = matched.map(item => {\n          return {\n            path: item.path,\n            title: item.meta.title\n          }\n        })\n      }\n    }\n    \n    getBreadcrumbs()\n    \n    watch(() => route.path, () => {\n      getBreadcrumbs()\n    })\n    \n    return {\n      breadcrumbs\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.el-breadcrumb {\n  font-size: 14px;\n  line-height: 50px;\n  \n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n  \n  a {\n    color: #606266;\n    cursor: pointer;\n    \n    &:hover {\n      color: #409EFF;\n    }\n  }\n}\n</style> "],"mappings":"AASA,SAASA,GAAG,EAAEC,KAAI,QAAS,KAAI;AAC/B,SAASC,QAAO,QAAS,YAAW;AAEpC,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIH,QAAQ,CAAC;IACvB,MAAMI,WAAU,GAAIN,GAAG,CAAC,EAAE;IAE1B,MAAMO,cAAa,GAAIA,CAAA,KAAM;MAC3B,MAAMC,OAAM,GAAIH,KAAK,CAACG,OAAO,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAG,IAAKD,IAAI,CAACC,IAAI,CAACC,KAAK;MAEzE,MAAMC,KAAI,GAAIL,OAAO,CAAC,CAAC;MACvB,IAAIK,KAAI,IAAKA,KAAK,CAACC,IAAG,KAAM,YAAY,EAAE;QACxCR,WAAW,CAACS,KAAI,GAAI,CAClB;UAAED,IAAI,EAAE,YAAY;UAAEF,KAAK,EAAE;QAAK,CAAC,EACnC,GAAGJ,OAAO,CAACQ,GAAG,CAACN,IAAG,IAAK;UACrB,OAAO;YACLI,IAAI,EAAEJ,IAAI,CAACI,IAAI;YACfF,KAAK,EAAEF,IAAI,CAACC,IAAI,CAACC;UACnB;QACF,CAAC,EACH;MACF,OAAO;QACLN,WAAW,CAACS,KAAI,GAAIP,OAAO,CAACQ,GAAG,CAACN,IAAG,IAAK;UACtC,OAAO;YACLI,IAAI,EAAEJ,IAAI,CAACI,IAAI;YACfF,KAAK,EAAEF,IAAI,CAACC,IAAI,CAACC;UACnB;QACF,CAAC;MACH;IACF;IAEAL,cAAc,CAAC;IAEfN,KAAK,CAAC,MAAMI,KAAK,CAACS,IAAI,EAAE,MAAM;MAC5BP,cAAc,CAAC;IACjB,CAAC;IAED,OAAO;MACLD;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}