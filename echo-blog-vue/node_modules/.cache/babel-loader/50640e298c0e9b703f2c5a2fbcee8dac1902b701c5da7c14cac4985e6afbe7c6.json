{"ast":null,"code":"import { ref, computed } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessageBox } from 'element-plus';\nimport { useUserStore } from '@/store/user';\nimport Breadcrumb from './components/Breadcrumb.vue';\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const route = useRoute();\n    const router = useRouter();\n    const userStore = useUserStore();\n\n    // 侧边栏折叠状态\n    const isCollapse = ref(false);\n\n    // 当前激活的菜单\n    const activeMenu = computed(() => {\n      const {\n        meta,\n        path\n      } = route;\n      if (meta.activeMenu) {\n        return meta.activeMenu;\n      }\n      return path;\n    });\n\n    // 切换侧边栏折叠状态\n    const toggleSidebar = () => {\n      isCollapse.value = !isCollapse.value;\n    };\n\n    // 处理退出登录\n    const handleLogout = () => {\n      ElMessageBox.confirm('确定要退出登录吗?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        await userStore.logout();\n        router.push('/login');\n      }).catch(() => {});\n    };\n    const __returned__ = {\n      route,\n      router,\n      userStore,\n      isCollapse,\n      activeMenu,\n      toggleSidebar,\n      handleLogout,\n      ref,\n      computed,\n      get useRoute() {\n        return useRoute;\n      },\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get useUserStore() {\n        return useUserStore;\n      },\n      Breadcrumb\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","computed","useRoute","useRouter","ElMessageBox","useUserStore","Breadcrumb","route","router","userStore","isCollapse","activeMenu","meta","path","toggleSidebar","value","handleLogout","confirm","confirmButtonText","cancelButtonText","type","then","logout","push","catch"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/layout/index.vue"],"sourcesContent":["<template>\n  <div class=\"app-wrapper\">\n    <!-- 侧边栏 -->\n    <div class=\"sidebar-container\" :class=\"{ 'is-collapsed': isCollapse }\">\n      <div class=\"logo-container\">\n        <img src=\"@/assets/logo.png\" alt=\"Logo\" class=\"logo\" />\n        <h1 v-if=\"!isCollapse\" class=\"title\">Echo博客</h1>\n      </div>\n      \n      <el-scrollbar>\n        <el-menu\n          :default-active=\"activeMenu\"\n          :collapse=\"isCollapse\"\n          :unique-opened=\"true\"\n          :collapse-transition=\"false\"\n          class=\"sidebar-menu\"\n          background-color=\"#304156\"\n          text-color=\"#bfcbd9\"\n          active-text-color=\"#409EFF\"\n        >\n          <el-menu-item index=\"/dashboard\" @click=\"$router.push('/dashboard')\">\n            <el-icon><Odometer /></el-icon>\n            <template #title>仪表盘</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/article\" @click=\"$router.push('/article')\">\n            <el-icon><Document /></el-icon>\n            <template #title>文章管理</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/category\" @click=\"$router.push('/category')\">\n            <el-icon><Collection /></el-icon>\n            <template #title>分类管理</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/task\" @click=\"$router.push('/task')\">\n            <el-icon><Clock /></el-icon>\n            <template #title>任务管理</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/ai-tasks\" @click=\"$router.push('/ai-tasks')\">\n            <el-icon><Magic /></el-icon>\n            <template #title>AI生成任务</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/crawler\" @click=\"$router.push('/crawler')\">\n            <el-icon><Connection /></el-icon>\n            <template #title>爬虫管理</template>\n          </el-menu-item>\n          \n          <el-menu-item index=\"/platform\" @click=\"$router.push('/platform')\">\n            <el-icon><Share /></el-icon>\n            <template #title>平台管理</template>\n          </el-menu-item>\n        </el-menu>\n      </el-scrollbar>\n    </div>\n    \n    <!-- 主要内容区域 -->\n    <div class=\"main-container\">\n      <!-- 顶部导航栏 -->\n      <div class=\"navbar\">\n        <div class=\"left-area\">\n          <el-icon class=\"toggle-button\" @click=\"toggleSidebar\">\n            <Fold v-if=\"!isCollapse\" />\n            <Expand v-else />\n          </el-icon>\n          <breadcrumb />\n        </div>\n        \n        <div class=\"right-menu\">\n          <el-dropdown trigger=\"click\">\n            <div class=\"avatar-container\">\n              <el-avatar :size=\"30\" :src=\"userStore.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\" />\n              <span class=\"username\">{{ userStore.name || userStore.username }}</span>\n              <el-icon><CaretBottom /></el-icon>\n            </div>\n            <template #dropdown>\n              <el-dropdown-menu>\n                <el-dropdown-item @click=\"$router.push('/profile')\">\n                  <el-icon><User /></el-icon>\n                  <span>个人中心</span>\n                </el-dropdown-item>\n                <el-dropdown-item divided @click=\"handleLogout\">\n                  <el-icon><SwitchButton /></el-icon>\n                  <span>退出登录</span>\n                </el-dropdown-item>\n              </el-dropdown-menu>\n            </template>\n          </el-dropdown>\n        </div>\n      </div>\n      \n      <!-- 内容区域 -->\n      <div class=\"app-main\">\n        <router-view v-slot=\"{ Component }\">\n          <transition name=\"fade-transform\" mode=\"out-in\">\n            <keep-alive>\n              <component :is=\"Component\" />\n            </keep-alive>\n          </transition>\n        </router-view>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessageBox } from 'element-plus'\nimport { useUserStore } from '@/store/user'\nimport Breadcrumb from './components/Breadcrumb.vue'\n\nconst route = useRoute()\nconst router = useRouter()\nconst userStore = useUserStore()\n\n// 侧边栏折叠状态\nconst isCollapse = ref(false)\n\n// 当前激活的菜单\nconst activeMenu = computed(() => {\n  const { meta, path } = route\n  if (meta.activeMenu) {\n    return meta.activeMenu\n  }\n  return path\n})\n\n// 切换侧边栏折叠状态\nconst toggleSidebar = () => {\n  isCollapse.value = !isCollapse.value\n}\n\n// 处理退出登录\nconst handleLogout = () => {\n  ElMessageBox.confirm('确定要退出登录吗?', '提示', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    await userStore.logout()\n    router.push('/login')\n  }).catch(() => {})\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-wrapper {\n  display: flex;\n  height: 100vh;\n  width: 100%;\n  \n  .sidebar-container {\n    width: 210px;\n    height: 100%;\n    background-color: #304156;\n    transition: width 0.3s;\n    overflow: hidden;\n    \n    &.is-collapsed {\n      width: 64px;\n    }\n    \n    .logo-container {\n      height: 60px;\n      display: flex;\n      align-items: center;\n      padding: 0 10px;\n      background-color: #2b3649;\n      \n      .logo {\n        width: 32px;\n        height: 32px;\n        margin-right: 10px;\n      }\n      \n      .title {\n        color: #fff;\n        font-size: 18px;\n        font-weight: 600;\n        margin: 0;\n        white-space: nowrap;\n      }\n    }\n    \n    .sidebar-menu {\n      border-right: none;\n    }\n  }\n  \n  .main-container {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    overflow: hidden;\n    \n    .navbar {\n      height: 50px;\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n      padding: 0 15px;\n      box-shadow: 0 1px 4px rgba(0, 21, 41, 0.08);\n      background-color: #fff;\n      \n      .left-area {\n        display: flex;\n        align-items: center;\n        \n        .toggle-button {\n          font-size: 20px;\n          cursor: pointer;\n          margin-right: 15px;\n          color: #606266;\n        }\n      }\n      \n      .right-menu {\n        display: flex;\n        align-items: center;\n        \n        .avatar-container {\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n          \n          .username {\n            margin: 0 5px;\n            color: #606266;\n          }\n        }\n      }\n    }\n    \n    .app-main {\n      flex: 1;\n      padding: 15px;\n      overflow-y: auto;\n      background-color: #f0f2f5;\n    }\n  }\n}\n\n.fade-transform-enter-active,\n.fade-transform-leave-active {\n  transition: all 0.3s;\n}\n\n.fade-transform-enter-from {\n  opacity: 0;\n  transform: translateX(30px);\n}\n\n.fade-transform-leave-to {\n  opacity: 0;\n  transform: translateX(-30px);\n}\n</style> "],"mappings":"AA4GA,SAASA,GAAG,EAAEC,QAAQ,QAAQ,KAAI;AAClC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,YAAW;AAC/C,SAASC,YAAY,QAAQ,cAAa;AAC1C,SAASC,YAAY,QAAQ,cAAa;AAC1C,OAAOC,UAAU,MAAM,6BAA4B;;;;;;;IAEnD,MAAMC,KAAK,GAAGL,QAAQ,CAAC;IACvB,MAAMM,MAAM,GAAGL,SAAS,CAAC;IACzB,MAAMM,SAAS,GAAGJ,YAAY,CAAC;;IAE/B;IACA,MAAMK,UAAU,GAAGV,GAAG,CAAC,KAAK;;IAE5B;IACA,MAAMW,UAAU,GAAGV,QAAQ,CAAC,MAAM;MAChC,MAAM;QAAEW,IAAI;QAAEC;MAAK,CAAC,GAAGN,KAAI;MAC3B,IAAIK,IAAI,CAACD,UAAU,EAAE;QACnB,OAAOC,IAAI,CAACD,UAAS;MACvB;MACA,OAAOE,IAAG;IACZ,CAAC;;IAED;IACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;MAC1BJ,UAAU,CAACK,KAAK,GAAG,CAACL,UAAU,CAACK,KAAI;IACrC;;IAEA;IACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;MACzBZ,YAAY,CAACa,OAAO,CAAC,WAAW,EAAE,IAAI,EAAE;QACtCC,iBAAiB,EAAE,IAAI;QACvBC,gBAAgB,EAAE,IAAI;QACtBC,IAAI,EAAE;MACR,CAAC,CAAC,CAACC,IAAI,CAAC,YAAY;QAClB,MAAMZ,SAAS,CAACa,MAAM,CAAC;QACvBd,MAAM,CAACe,IAAI,CAAC,QAAQ;MACtB,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC;IACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}