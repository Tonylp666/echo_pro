{"ast":null,"code":"import { ref, reactive, computed, onMounted } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nexport default {\n  name: 'CrawlerRule',\n  setup() {\n    const route = useRoute();\n    const router = useRouter();\n    const ruleFormRef = ref(null);\n    const ruleForm = reactive({\n      ruleName: '',\n      targetUrl: '',\n      listSelector: '',\n      titleSelector: '',\n      contentSelector: '',\n      dateSelector: '',\n      authorSelector: '',\n      headers: '',\n      status: 'ENABLED'\n    });\n    const rules = {\n      ruleName: [{\n        required: true,\n        message: '请输入规则名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }],\n      targetUrl: [{\n        required: true,\n        message: '请输入目标网站URL',\n        trigger: 'blur'\n      }],\n      listSelector: [{\n        required: true,\n        message: '请输入列表选择器',\n        trigger: 'blur'\n      }],\n      titleSelector: [{\n        required: true,\n        message: '请输入标题选择器',\n        trigger: 'blur'\n      }],\n      contentSelector: [{\n        required: true,\n        message: '请输入内容选择器',\n        trigger: 'blur'\n      }]\n    };\n    const isEdit = computed(() => {\n      return route.query.id !== undefined;\n    });\n\n    // 获取规则详情\n    const fetchRuleDetail = id => {\n      // 模拟API请求\n      setTimeout(() => {\n        // 使用 id 参数模拟获取特定规则的详情\n        console.log(`Fetching rule details for id: ${id}`);\n        Object.assign(ruleForm, {\n          ruleName: '知乎热门',\n          targetUrl: 'https://www.zhihu.com/hot',\n          listSelector: '.HotItem',\n          titleSelector: '.HotItem-title',\n          contentSelector: '.HotItem-excerpt',\n          dateSelector: '',\n          authorSelector: '',\n          headers: '{\"User-Agent\": \"Mozilla/5.0\"}',\n          status: 'ENABLED'\n        });\n      }, 500);\n    };\n    const submitForm = async () => {\n      if (!ruleFormRef.value) return;\n      await ruleFormRef.value.validate(valid => {\n        if (valid) {\n          // 模拟API请求\n          setTimeout(() => {\n            ElMessage.success(isEdit.value ? '规则更新成功' : '规则创建成功');\n            router.push('/crawler');\n          }, 500);\n        }\n      });\n    };\n    const resetForm = () => {\n      if (ruleFormRef.value) {\n        ruleFormRef.value.resetFields();\n      }\n    };\n    onMounted(() => {\n      if (isEdit.value) {\n        fetchRuleDetail(route.query.id);\n      }\n    });\n    return {\n      ruleFormRef,\n      ruleForm,\n      rules,\n      isEdit,\n      submitForm,\n      resetForm\n    };\n  }\n};","map":{"version":3,"names":["ref","reactive","computed","onMounted","useRoute","useRouter","ElMessage","name","setup","route","router","ruleFormRef","ruleForm","ruleName","targetUrl","listSelector","titleSelector","contentSelector","dateSelector","authorSelector","headers","status","rules","required","message","trigger","min","max","isEdit","query","id","undefined","fetchRuleDetail","setTimeout","console","log","Object","assign","submitForm","value","validate","valid","success","push","resetForm","resetFields"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/crawler/rule.vue"],"sourcesContent":["<template>\n  <div class=\"crawler-rule-container\">\n    <div class=\"page-header\">\n      <h2>{{ isEdit ? '编辑爬虫规则' : '创建爬虫规则' }}</h2>\n      <el-button @click=\"$router.push('/crawler')\">返回列表</el-button>\n    </div>\n    \n    <el-form :model=\"ruleForm\" :rules=\"rules\" ref=\"ruleFormRef\" label-width=\"120px\">\n      <el-form-item label=\"规则名称\" prop=\"ruleName\">\n        <el-input v-model=\"ruleForm.ruleName\" placeholder=\"请输入规则名称\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"目标网站URL\" prop=\"targetUrl\">\n        <el-input v-model=\"ruleForm.targetUrl\" placeholder=\"请输入目标网站URL\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"列表选择器\" prop=\"listSelector\">\n        <el-input v-model=\"ruleForm.listSelector\" placeholder=\"请输入列表选择器，例如：.list-item\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"标题选择器\" prop=\"titleSelector\">\n        <el-input v-model=\"ruleForm.titleSelector\" placeholder=\"请输入标题选择器，例如：.title\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"内容选择器\" prop=\"contentSelector\">\n        <el-input v-model=\"ruleForm.contentSelector\" placeholder=\"请输入内容选择器，例如：.content\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"日期选择器\">\n        <el-input v-model=\"ruleForm.dateSelector\" placeholder=\"请输入日期选择器，例如：.date\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"作者选择器\">\n        <el-input v-model=\"ruleForm.authorSelector\" placeholder=\"请输入作者选择器，例如：.author\"></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"请求头\">\n        <el-input\n          v-model=\"ruleForm.headers\"\n          type=\"textarea\"\n          :rows=\"4\"\n          placeholder=\"请输入请求头，JSON格式，例如：{'User-Agent': 'Mozilla/5.0'}\"\n        ></el-input>\n      </el-form-item>\n      \n      <el-form-item label=\"状态\">\n        <el-radio-group v-model=\"ruleForm.status\">\n          <el-radio label=\"ENABLED\">启用</el-radio>\n          <el-radio label=\"DISABLED\">禁用</el-radio>\n        </el-radio-group>\n      </el-form-item>\n      \n      <el-form-item>\n        <el-button type=\"primary\" @click=\"submitForm\">{{ isEdit ? '保存' : '创建' }}</el-button>\n        <el-button @click=\"resetForm\">重置</el-button>\n      </el-form-item>\n    </el-form>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, onMounted } from 'vue'\nimport { useRoute, useRouter } from 'vue-router'\nimport { ElMessage } from 'element-plus'\n\nexport default {\n  name: 'CrawlerRule',\n  setup() {\n    const route = useRoute()\n    const router = useRouter()\n    const ruleFormRef = ref(null)\n    \n    const ruleForm = reactive({\n      ruleName: '',\n      targetUrl: '',\n      listSelector: '',\n      titleSelector: '',\n      contentSelector: '',\n      dateSelector: '',\n      authorSelector: '',\n      headers: '',\n      status: 'ENABLED'\n    })\n    \n    const rules = {\n      ruleName: [\n        { required: true, message: '请输入规则名称', trigger: 'blur' },\n        { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n      ],\n      targetUrl: [\n        { required: true, message: '请输入目标网站URL', trigger: 'blur' }\n      ],\n      listSelector: [\n        { required: true, message: '请输入列表选择器', trigger: 'blur' }\n      ],\n      titleSelector: [\n        { required: true, message: '请输入标题选择器', trigger: 'blur' }\n      ],\n      contentSelector: [\n        { required: true, message: '请输入内容选择器', trigger: 'blur' }\n      ]\n    }\n    \n    const isEdit = computed(() => {\n      return route.query.id !== undefined\n    })\n    \n    // 获取规则详情\n    const fetchRuleDetail = (id) => {\n      // 模拟API请求\n      setTimeout(() => {\n        // 使用 id 参数模拟获取特定规则的详情\n        console.log(`Fetching rule details for id: ${id}`)\n        Object.assign(ruleForm, {\n          ruleName: '知乎热门',\n          targetUrl: 'https://www.zhihu.com/hot',\n          listSelector: '.HotItem',\n          titleSelector: '.HotItem-title',\n          contentSelector: '.HotItem-excerpt',\n          dateSelector: '',\n          authorSelector: '',\n          headers: '{\"User-Agent\": \"Mozilla/5.0\"}',\n          status: 'ENABLED'\n        })\n      }, 500)\n    }\n    \n    const submitForm = async () => {\n      if (!ruleFormRef.value) return\n      \n      await ruleFormRef.value.validate((valid) => {\n        if (valid) {\n          // 模拟API请求\n          setTimeout(() => {\n            ElMessage.success(isEdit.value ? '规则更新成功' : '规则创建成功')\n            router.push('/crawler')\n          }, 500)\n        }\n      })\n    }\n    \n    const resetForm = () => {\n      if (ruleFormRef.value) {\n        ruleFormRef.value.resetFields()\n      }\n    }\n    \n    onMounted(() => {\n      if (isEdit.value) {\n        fetchRuleDetail(route.query.id)\n      }\n    })\n    \n    return {\n      ruleFormRef,\n      ruleForm,\n      rules,\n      isEdit,\n      submitForm,\n      resetForm\n    }\n  }\n}\n</script>\n\n<style scoped>\n.crawler-rule-container {\n  padding: 20px;\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}