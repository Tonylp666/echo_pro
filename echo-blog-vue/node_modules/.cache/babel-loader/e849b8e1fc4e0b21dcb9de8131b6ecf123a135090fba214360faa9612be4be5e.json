{"ast":null,"code":"import { ref, reactive, onMounted } from 'vue';\nimport { ElMessage, ElMessageBox } from 'element-plus';\nimport { getCategories, getCategory, createCategory, updateCategory, deleteCategory } from '@/api/category';\n\n// 分类列表\n\nexport default {\n  __name: 'index',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const categoryList = ref([]);\n    const loading = ref(false);\n    const total = ref(0);\n\n    // 查询参数\n    const queryParams = reactive({\n      current: 1,\n      size: 10\n    });\n\n    // 分类表单\n    const categoryFormRef = ref(null);\n    const dialogVisible = ref(false);\n    const submitLoading = ref(false);\n    const isEdit = ref(false);\n    const categoryForm = reactive({\n      id: null,\n      name: '',\n      description: '',\n      status: 'ENABLED'\n    });\n\n    // 表单验证规则\n    const categoryRules = {\n      name: [{\n        required: true,\n        message: '请输入分类名称',\n        trigger: 'blur'\n      }, {\n        min: 2,\n        max: 50,\n        message: '长度在 2 到 50 个字符',\n        trigger: 'blur'\n      }]\n    };\n\n    // 获取分类列表\n    const getCategoryList = async () => {\n      loading.value = true;\n      try {\n        const {\n          data\n        } = await getCategories({\n          current: queryParams.current,\n          size: queryParams.size\n        });\n        categoryList.value = data.records;\n        total.value = data.total;\n      } catch (error) {\n        console.error('获取分类列表失败:', error);\n        ElMessage.error('获取分类列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 添加分类\n    const handleCreateCategory = () => {\n      isEdit.value = false;\n      resetForm();\n      dialogVisible.value = true;\n    };\n\n    // 编辑分类\n    const handleEditCategory = async row => {\n      isEdit.value = true;\n      resetForm();\n      try {\n        const {\n          data\n        } = await getCategory(row.id);\n        Object.assign(categoryForm, data);\n        dialogVisible.value = true;\n      } catch (error) {\n        console.error('获取分类详情失败:', error);\n        ElMessage.error('获取分类详情失败');\n      }\n    };\n\n    // 删除分类\n    const handleDeleteCategory = id => {\n      ElMessageBox.confirm('确定要删除该分类吗？删除后不可恢复！', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(async () => {\n        try {\n          await deleteCategory(id);\n          ElMessage.success('删除成功');\n          getCategoryList();\n        } catch (error) {\n          console.error('删除分类失败:', error);\n          ElMessage.error('删除分类失败');\n        }\n      }).catch(() => {});\n    };\n\n    // 提交表单\n    const submitForm = () => {\n      categoryFormRef.value.validate(async valid => {\n        if (valid) {\n          submitLoading.value = true;\n          try {\n            if (isEdit.value) {\n              await updateCategory(categoryForm.id, categoryForm);\n              ElMessage.success('更新成功');\n            } else {\n              await createCategory(categoryForm);\n              ElMessage.success('创建成功');\n            }\n            dialogVisible.value = false;\n            getCategoryList();\n          } catch (error) {\n            console.error('保存分类失败:', error);\n            ElMessage.error('保存分类失败');\n          } finally {\n            submitLoading.value = false;\n          }\n        } else {\n          return false;\n        }\n      });\n    };\n\n    // 重置表单\n    const resetForm = () => {\n      categoryForm.id = null;\n      categoryForm.name = '';\n      categoryForm.description = '';\n      categoryForm.status = 'ENABLED';\n      if (categoryFormRef.value) {\n        categoryFormRef.value.resetFields();\n      }\n    };\n\n    // 分页处理\n    const handleSizeChange = size => {\n      queryParams.size = size;\n      getCategoryList();\n    };\n    const handleCurrentChange = current => {\n      queryParams.current = current;\n      getCategoryList();\n    };\n    onMounted(() => {\n      getCategoryList();\n    });\n    const __returned__ = {\n      categoryList,\n      loading,\n      total,\n      queryParams,\n      categoryFormRef,\n      dialogVisible,\n      submitLoading,\n      isEdit,\n      categoryForm,\n      categoryRules,\n      getCategoryList,\n      handleCreateCategory,\n      handleEditCategory,\n      handleDeleteCategory,\n      submitForm,\n      resetForm,\n      handleSizeChange,\n      handleCurrentChange,\n      ref,\n      reactive,\n      onMounted,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get ElMessageBox() {\n        return ElMessageBox;\n      },\n      get getCategories() {\n        return getCategories;\n      },\n      get getCategory() {\n        return getCategory;\n      },\n      get createCategory() {\n        return createCategory;\n      },\n      get updateCategory() {\n        return updateCategory;\n      },\n      get deleteCategory() {\n        return deleteCategory;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","reactive","onMounted","ElMessage","ElMessageBox","getCategories","getCategory","createCategory","updateCategory","deleteCategory","categoryList","loading","total","queryParams","current","size","categoryFormRef","dialogVisible","submitLoading","isEdit","categoryForm","id","name","description","status","categoryRules","required","message","trigger","min","max","getCategoryList","value","data","records","error","console","handleCreateCategory","resetForm","handleEditCategory","row","Object","assign","handleDeleteCategory","confirm","confirmButtonText","cancelButtonText","type","then","success","catch","submitForm","validate","valid","resetFields","handleSizeChange","handleCurrentChange"],"sources":["/Users/ls/echo_pro/echo-blog-vue/src/views/category/index.vue"],"sourcesContent":["<template>\n  <div class=\"category-container app-container\">\n    <el-card class=\"box-card\">\n      <template #header>\n        <div class=\"card-header\">\n          <span>分类管理</span>\n          <el-button type=\"primary\" @click=\"handleCreateCategory\">\n            <el-icon><Plus /></el-icon>\n            添加分类\n          </el-button>\n        </div>\n      </template>\n      \n      <el-table\n        v-loading=\"loading\"\n        :data=\"categoryList\"\n        style=\"width: 100%\"\n        border\n      >\n        <el-table-column prop=\"id\" label=\"ID\" width=\"80\" />\n        <el-table-column prop=\"name\" label=\"分类名称\" min-width=\"150\" />\n        <el-table-column prop=\"description\" label=\"描述\" min-width=\"200\" show-overflow-tooltip />\n        <el-table-column label=\"状态\" width=\"100\">\n          <template #default=\"{ row }\">\n            <el-tag :type=\"row.status === 'ENABLED' ? 'success' : 'danger'\" size=\"small\">\n              {{ row.status === 'ENABLED' ? '启用' : '禁用' }}\n            </el-tag>\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"createdTime\" label=\"创建时间\" width=\"180\" />\n        <el-table-column label=\"操作\" width=\"200\" fixed=\"right\">\n          <template #default=\"{ row }\">\n            <el-button\n              type=\"primary\"\n              size=\"small\"\n              @click=\"handleEditCategory(row)\"\n            >\n              编辑\n            </el-button>\n            <el-button\n              type=\"danger\"\n              size=\"small\"\n              @click=\"handleDeleteCategory(row.id)\"\n            >\n              删除\n            </el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n      \n      <div class=\"pagination-container\">\n        <el-pagination\n          v-model:current-page=\"queryParams.current\"\n          v-model:page-size=\"queryParams.size\"\n          :page-sizes=\"[10, 20, 50, 100]\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\"\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n        />\n      </div>\n    </el-card>\n    \n    <!-- 分类表单对话框 -->\n    <el-dialog\n      v-model=\"dialogVisible\"\n      :title=\"isEdit ? '编辑分类' : '添加分类'\"\n      width=\"500px\"\n    >\n      <el-form\n        ref=\"categoryFormRef\"\n        :model=\"categoryForm\"\n        :rules=\"categoryRules\"\n        label-width=\"100px\"\n      >\n        <el-form-item label=\"分类名称\" prop=\"name\">\n          <el-input v-model=\"categoryForm.name\" placeholder=\"请输入分类名称\" />\n        </el-form-item>\n        \n        <el-form-item label=\"描述\" prop=\"description\">\n          <el-input\n            v-model=\"categoryForm.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"请输入分类描述\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"状态\" prop=\"status\">\n          <el-radio-group v-model=\"categoryForm.status\">\n            <el-radio label=\"ENABLED\">启用</el-radio>\n            <el-radio label=\"DISABLED\">禁用</el-radio>\n          </el-radio-group>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"dialogVisible = false\">取消</el-button>\n          <el-button type=\"primary\" :loading=\"submitLoading\" @click=\"submitForm\">\n            确定\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, reactive, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { getCategories, getCategory, createCategory, updateCategory, deleteCategory } from '@/api/category'\n\n// 分类列表\nconst categoryList = ref([])\nconst loading = ref(false)\nconst total = ref(0)\n\n// 查询参数\nconst queryParams = reactive({\n  current: 1,\n  size: 10\n})\n\n// 分类表单\nconst categoryFormRef = ref(null)\nconst dialogVisible = ref(false)\nconst submitLoading = ref(false)\nconst isEdit = ref(false)\nconst categoryForm = reactive({\n  id: null,\n  name: '',\n  description: '',\n  status: 'ENABLED'\n})\n\n// 表单验证规则\nconst categoryRules = {\n  name: [\n    { required: true, message: '请输入分类名称', trigger: 'blur' },\n    { min: 2, max: 50, message: '长度在 2 到 50 个字符', trigger: 'blur' }\n  ]\n}\n\n// 获取分类列表\nconst getCategoryList = async () => {\n  loading.value = true\n  try {\n    const { data } = await getCategories({\n      current: queryParams.current,\n      size: queryParams.size\n    })\n    categoryList.value = data.records\n    total.value = data.total\n  } catch (error) {\n    console.error('获取分类列表失败:', error)\n    ElMessage.error('获取分类列表失败')\n  } finally {\n    loading.value = false\n  }\n}\n\n// 添加分类\nconst handleCreateCategory = () => {\n  isEdit.value = false\n  resetForm()\n  dialogVisible.value = true\n}\n\n// 编辑分类\nconst handleEditCategory = async (row) => {\n  isEdit.value = true\n  resetForm()\n  \n  try {\n    const { data } = await getCategory(row.id)\n    Object.assign(categoryForm, data)\n    dialogVisible.value = true\n  } catch (error) {\n    console.error('获取分类详情失败:', error)\n    ElMessage.error('获取分类详情失败')\n  }\n}\n\n// 删除分类\nconst handleDeleteCategory = (id) => {\n  ElMessageBox.confirm('确定要删除该分类吗？删除后不可恢复！', '警告', {\n    confirmButtonText: '确定',\n    cancelButtonText: '取消',\n    type: 'warning'\n  }).then(async () => {\n    try {\n      await deleteCategory(id)\n      ElMessage.success('删除成功')\n      getCategoryList()\n    } catch (error) {\n      console.error('删除分类失败:', error)\n      ElMessage.error('删除分类失败')\n    }\n  }).catch(() => {})\n}\n\n// 提交表单\nconst submitForm = () => {\n  categoryFormRef.value.validate(async (valid) => {\n    if (valid) {\n      submitLoading.value = true\n      try {\n        if (isEdit.value) {\n          await updateCategory(categoryForm.id, categoryForm)\n          ElMessage.success('更新成功')\n        } else {\n          await createCategory(categoryForm)\n          ElMessage.success('创建成功')\n        }\n        dialogVisible.value = false\n        getCategoryList()\n      } catch (error) {\n        console.error('保存分类失败:', error)\n        ElMessage.error('保存分类失败')\n      } finally {\n        submitLoading.value = false\n      }\n    } else {\n      return false\n    }\n  })\n}\n\n// 重置表单\nconst resetForm = () => {\n  categoryForm.id = null\n  categoryForm.name = ''\n  categoryForm.description = ''\n  categoryForm.status = 'ENABLED'\n  \n  if (categoryFormRef.value) {\n    categoryFormRef.value.resetFields()\n  }\n}\n\n// 分页处理\nconst handleSizeChange = (size) => {\n  queryParams.size = size\n  getCategoryList()\n}\n\nconst handleCurrentChange = (current) => {\n  queryParams.current = current\n  getCategoryList()\n}\n\nonMounted(() => {\n  getCategoryList()\n})\n</script>\n\n<style lang=\"scss\" scoped>\n.category-container {\n  .pagination-container {\n    margin-top: 20px;\n  }\n}\n</style> "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}